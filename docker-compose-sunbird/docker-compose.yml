version: '2.4'

services:
  vault:
    image: vault:1.13.3
    restart: always
    volumes:
      - ./vault.json:/vault/config/vault.json
      - ./data/vault-data:/vault/file
    environment:
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_API_ADDR=${VAULT_API_ADDR}
      - VAULT_ADDRESS=${VAULT_ADDRESS}
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    ports:
      - 8200:8200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --spider http://127.0.0.1:8200/v1/sys/health || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - network
  identity:
    image: ghcr.io/sunbird-rc/sunbird-rc-identity-service:v2.0.0-rc3
    ports:
      - "3332:3332"
    depends_on:
      vault:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/postgres
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_TOKEN=${VAULT_TOKEN}
      - VAULT_BASE_URL=${VAULT_BASE_URL}
      - VAULT_ROOT_PATH=${VAULT_ROOT_PATH}
      - VAULT_TIMEOUT=${VAULT_TIMEOUT}
      - VAULT_PROXY=${VAULT_PROXY}
      - SIGNING_ALGORITHM=${SIGNING_ALGORITHM}
      - JWKS_URI=${JWKS_URI}
      - ENABLE_AUTH=${ENABLE_AUTH}
      - WEB_DID_BASE_URL=${WEB_DID_BASE_URL}
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3332/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network
  schema:
    image: ghcr.io/sunbird-rc/sunbird-rc-credential-schema:v2.0.0-rc3
    ports:
      - "3333:3333"
    depends_on:
      db:
        condition: service_healthy
      identity:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/postgres
      - IDENTITY_BASE_URL=${IDENTITY_BASE_URL}
      - JWKS_URI=${JWKS_URI}
      - ENABLE_AUTH=${ENABLE_AUTH}
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3333/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network
  credential:
    image: ghcr.io/sunbird-rc/sunbird-rc-credentials-service:v2.0.0-rc3
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      identity:
        condition: service_healthy
      schema:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/postgres
      - IDENTITY_BASE_URL=${IDENTITY_BASE_URL}
      - SCHEMA_BASE_URL=${SCHEMA_BASE_URL}
      - CREDENTIAL_SERVICE_BASE_URL=${CREDENTIAL_SERVICE_BASE_URL}
      - JWKS_URI=${JWKS_URI}
      - ENABLE_AUTH=${ENABLE_AUTH}
      - QR_TYPE=W3C_VC
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3000/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network
  db:
    image: postgres:12.1-alpine
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data/db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - network
  registry:
    image: ghcr.io/sunbird-rc/sunbird-rc-core:${RELEASE_VERSION}
    volumes:
      - ./${SCHEMA_DIR}:/home/sunbirdrc/config/public/_schemas
    environment:
      - connectionInfo_uri=jdbc:postgresql://db:5432/postgres
      - connectionInfo_username=${POSTGRES_USER}
      - connectionInfo_password=${POSTGRES_PASSWORD}
      - encryption_enabled=false
      - event_enabled=false
      - search_providerName=${SEARCH_PROVIDER_NAME-dev.sunbirdrc.registry.service.NativeSearchService}
      - idgen_enabled=false
      - claims_enabled=false
      - certificate_enabled=false
      - signature_enabled=false
      - filestorage_enabled=false
      - registry_base_apis_enable=false
      - logging.level.root=INFO
      - async_enabled=false
      - authentication_enabled=false
      - notification_enabled=false
      - webhook_enabled=false
      - manager_type=DefinitionsManager
    ports:
      - '8044:8081'
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget -nv -t1 --spider http://localhost:8081/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - network
  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./imports/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '8000:80'
    depends_on:
      registry:
        condition: service_healthy
      identity:
        condition: service_healthy
      schema:
        condition: service_healthy
      credential:
        condition: service_healthy
    networks:
      - network
networks:
  network:
    driver: bridge
    name: mosip_network
