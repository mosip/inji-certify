GetCredentialSunBirdC:
   InjiCertify_GetCredentialSunBirdC_IdpAccessToken_all_Valid_Smoke:
      endPoint: $INJICERTIFYINSURANCEBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_credentialissuance_01     
      description: Get sunbird VC with valid details     
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_WellKnownEndpoint_Sunbird_01
      validityCheckRequired: true
      inputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdC
      outputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdCResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2SunBirdC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenSunBirdC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_2$",
        "credentialType": "InsuranceCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialSunBirdC_IdpAccessToken_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYINSURANCEBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_credentialissuance_02      
      description: Get sunbird VC with valid details     
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_WellKnownEndpoint_Sunbird_01
      validityCheckRequired: true
      inputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdC
      outputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdCResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2SunBirdC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenSunBirdC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "InsuranceCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialSunBirdC_IdpAccessToken_ES256_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYINSURANCEBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_credentialissuance_03     
      description: Get sunbird VC with valid details
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_WellKnownEndpoint_Sunbird_01
      validityCheckRequired: true
      inputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdC
      outputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdCResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2SunBirdC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenSunBirdC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ES256$",
        "credentialType": "InsuranceCredential",
        "signatureSupported": "ES256"
}'
      output: '{
}'

   InjiCertify_GetCredentialSunBirdC_IdpAccessToken_ED25519_Did_Key_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYINSURANCEBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_credentialissuance_04     
      description: Get sunbird VC with valid details     
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_WellKnownEndpoint_Sunbird_01
      validityCheckRequired: true
      inputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdC
      outputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdCResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2SunBirdC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenSunBirdC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "InsuranceCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "InsuranceCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'
   InjiCertify_GetCredentialSunBirdC_IdpAccessToken_ECCR1_Sign:
      endPoint: $INJICERTIFYINSURANCEBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_credentialissuance_05     
      description: Get sunbird VC with valid details     
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_addCredentialtype_17
      validityCheckRequired: true
      inputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdC
      outputTemplate: injicertify/SunBirdC/GetCredentialSunBirdC/GetCredentialSunBirdCResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2SunBirdC_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenSunBirdC_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "InsuranceCredential_eccr1"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "InsuranceCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'