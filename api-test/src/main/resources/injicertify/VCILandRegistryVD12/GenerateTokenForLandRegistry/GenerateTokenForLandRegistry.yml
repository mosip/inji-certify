GenerateTokenForLandRegistry:
   InjiCertify_ESignet_GenerateToken_ForLandRegistry_Vd12_Valid_Smoke_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/oauth/v2/token
      uniqueIdentifier: TC_esignetDependent_GenerateToken
      description: Generate Token for mock ida
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GenerateTokenForLandRegistry/GenerateTokenForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GenerateTokenForLandRegistry/GenerateTokenForLandRegistryResult
      input: '{
		  "grant_type": "authorization_code",
		  "code": "$ID:ESignet_AuthorizationCode_ForLandRegistry_Vd12_All_Valid_Smoke_sid_code$",
		  "client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
		  "client_assertion_type": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
		  "client_assertion": "$CLIENT_ASSERTION_USER4_JWT$",
		  "redirect_uri": "$IDPREDIRECTURI$",
  		  "code_verifier": "$CODEVERIFIER$"
}'
      output: '{
   		"token_type": "Bearer"
}'

   InjiCertify_ESignet_GenerateToken_ForLandRegistry_Vd12_Cred_2_Valid_Smoke_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/oauth/v2/token
      uniqueIdentifier: TC_esignetDependent_GenerateToken
      description: Generate Token for mock ida
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GenerateTokenForLandRegistry/GenerateTokenForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GenerateTokenForLandRegistry/GenerateTokenForLandRegistryResult
      input: '{
		  "grant_type": "authorization_code",
		  "code": "$ID:ESignet_AuthorizationCode_ForLandRegistry_Vd12_Cred_2_All_Valid_Smoke_sid_code$",
		  "client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
		  "client_assertion_type": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
		  "client_assertion": "$CLIENT_ASSERTION_USER4_JWT$",
		  "redirect_uri": "$IDPREDIRECTURI$",
  		  "code_verifier": "$CODEVERIFIER$"
}'
      output: '{
   		"token_type": "Bearer"
}'