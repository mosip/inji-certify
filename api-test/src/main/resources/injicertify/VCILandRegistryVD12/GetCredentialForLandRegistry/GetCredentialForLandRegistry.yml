GetCredentialForLandRegistry:
   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_17
      description: Get credentials for Land Registry VD12 with LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_2.0_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_18
      description: Get credentials for Land Registry VD12 with 2.0 data model LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_Cred_2_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_19
      description: Get credentials for Land Registry VD12 with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_Cred_2_2.0_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_20
      description: Get credentials for Land Registry VD12 with 2.0 data model RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_17
      description: Get credentials for Land Registry VD12 with LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_2.0_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_18
      description: Get credentials for Land Registry VD12 with 2.0 data model LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_Cred_2_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_19
      description: Get credentials for Land Registry VD12 with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_Vd12_IdpAccessToken_Cred_2_2.0_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_20
      description: Get credentials for Land Registry VD12 with 2.0 data model RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistryVD12/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Vd12_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'