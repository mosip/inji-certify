GenerateTokenForSd_Jwt:
   InjiCertify_ESignet_GenerateToken_ForLandRegistry_Cred1_Sd_Jwt_Valid_Smoke_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/oauth/v2/token
      uniqueIdentifier: TC_esignetDependent_GenerateToken_07
      description: Generate Token for Sd_Jwt for cred1
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/Sd_Jwt/GenerateTokenForSd_Jwt/GenerateTokenForSd_Jwt
      outputTemplate: injicertify/Sd_Jwt/GenerateTokenForSd_Jwt/GenerateTokenForSd_JwtResult
      input: '{
		  "grant_type": "authorization_code",
		  "code": "$ID:ESignet_AuthorizationCode_For_LandRegistry_Cred1_Sd_Jwt_All_Valid_Smoke_sid_code$",
		  "client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry2_all_Valid_Smoke_sid_clientId$",
		  "client_assertion_type": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
		  "client_assertion": "$CLIENT_ASSERTION_JWT$",
		  "redirect_uri": "$IDPREDIRECTURI$",
  		  "code_verifier": "$CODEVERIFIER$"
}'
      output: '{
   		"token_type": "Bearer"
}'
   InjiCertify_ESignet_GenerateToken_ForLandRegistry_Cred2_Sd_Jwt_Valid_Smoke_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/oauth/v2/token
      uniqueIdentifier: TC_esignetDependent_GenerateToken_08
      description: Generate Token for Sd_Jwt for cred2
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/Sd_Jwt/GenerateTokenForSd_Jwt/GenerateTokenForSd_Jwt
      outputTemplate: injicertify/Sd_Jwt/GenerateTokenForSd_Jwt/GenerateTokenForSd_JwtResult
      input: '{
		  "grant_type": "authorization_code",
		  "code": "$ID:ESignet_AuthorizationCode_For_LandRegistry_Cred2_Sd_Jwt_All_Valid_Smoke_sid_code$",
		  "client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry2_all_Valid_Smoke_sid_clientId$",
		  "client_assertion_type": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
		  "client_assertion": "$CLIENT_ASSERTION_JWT$",
		  "redirect_uri": "$IDPREDIRECTURI$",
  		  "code_verifier": "$CODEVERIFIER$"
}'
      output: '{
   		"token_type": "Bearer"
}'