AuthorizationCodeForSd_Jwt:
   InjiCertify_ESignet_AuthorizationCode_For_LandRegistry_Cred1_Sd_Jwt_All_Valid_Smoke_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/authorization/auth-code
      uniqueIdentifier: TC_esignetDependent_AuthorizationCode
      description: Authorization Code for sd_jwt for cred1
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: injicertify/Sd_Jwt/AuthorizationCodeForSd_Jwt/AuthorizationCodeForSd_Jwt
      outputTemplate: injicertify/Sd_Jwt/AuthorizationCodeForSd_Jwt/AuthorizationCodeForSd_JwtResult
      input: '{
        "encodedHash": "$ID:ESignet_OAuthDetailsRequest_For_LandRegistry_Cred1_Sd_Jwt_uin_all_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:ESignet_OAuthDetailsRequest_For_LandRegistry_Cred1_Sd_Jwt_uin_all_Valid_Smoke_sid_transactionId$"
}'
      output: '{
}'
   InjiCertify_ESignet_AuthorizationCode_For_LandRegistry_Cred2_Sd_Jwt_All_Valid_Smoke_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/authorization/auth-code
      uniqueIdentifier: TC_esignetDependent_AuthorizationCode
      description: Authorization Code for sd_jwt for cred2
      role: resident
      restMethod: post
      checkErrorsOnlyInResponse: true
      validityCheckRequired: true
      inputTemplate: injicertify/Sd_Jwt/AuthorizationCodeForSd_Jwt/AuthorizationCodeForSd_Jwt
      outputTemplate: injicertify/Sd_Jwt/AuthorizationCodeForSd_Jwt/AuthorizationCodeForSd_JwtResult
      input: '{
        "encodedHash": "$ID:ESignet_OAuthDetailsRequest_For_LandRegistry_Cred2_Sd_Jwt_uin_all_Valid_Smoke_sid_encodedResp$",
      	"requestTime": "$TIMESTAMP$",
      	"transactionId": "$ID:ESignet_OAuthDetailsRequest_For_LandRegistry_Cred2_Sd_Jwt_uin_all_Valid_Smoke_sid_transactionId$"
}'
      output: '{
}'