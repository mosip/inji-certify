GetCredentialForSd_jwtVd12:
   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Cred1_Vd12_Sd_jwt_ES256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/vd12/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialFor_Sd_jwt_08
      description: Get credentials Sd_jwt format for vd12
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_Sd_jwt_Signature_01,TC_DBDependent_InsertQuery_02
      validityCheckRequired: true
      inputTemplate: injicertify/Sd_Jwt/GetCredentialForSd_Jwt/GetCredentialForSd_Jwt
      outputTemplate: injicertify/Sd_Jwt/GetCredentialForSd_Jwt/GetCredentialForSd_JwtResult      
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry2_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred1_Sd_Jwt_Valid_Smoke_sid_access_token$",
        "format": "vc+sd-jwt",
        "vct": "Sd_jwt_landstatement",        
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ES256$",
        "signatureSupported": "ES256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Cred2_Sd_jwt_Vd12_PS256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialFor_Sd_jwt_09
      description: Get credentials Sd_jwt format for vd12 PS256 credential type 2
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      additionalDependencies: TC_InjiCertify_Sd_jwt_Signature_04,TC_DBDependent_InsertQuery_01
      validityCheckRequired: true
      inputTemplate: injicertify/Sd_Jwt/GetCredentialForSd_Jwt/GetCredentialForSd_Jwt
      outputTemplate: injicertify/Sd_Jwt/GetCredentialForSd_Jwt/GetCredentialForSd_JwtResult      
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry2_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred2_Sd_Jwt_Valid_Smoke_sid_access_token$",
        "format": "vc+sd-jwt",
        "vct": "Sd_jwt_landregistry",        
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$",
        "signatureSupported": "PS256"
}'
      output: '{
}'