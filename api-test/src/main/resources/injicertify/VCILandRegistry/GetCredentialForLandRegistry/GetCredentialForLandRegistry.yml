GetCredentialForLandRegistry:
   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_01
      description: Get credentials for Land Registry with LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Sign_PS256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_02
      description: Get credentials for Land Registry with LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "PS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_03
      description: Get credentials for Land Registry with 2.0 data model LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_Sign_PS256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_04
      description: Get credentials for Land Registry with 2.0 data model LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "PS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Cred_2_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_05
      description: Get credentials for Land Registry with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Cred_2_Sign_PS256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_06
      description: Get credentials for Land Registry with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "PS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_Cred_2_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_07
      description: Get credentials for Land Registry with 2.0 data model with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_Cred_2_Sign_PS256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_08
      description: Get credentials for Land Registry with 2.0 data model with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "PS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_21
      description: Get credentials for Land Registry with LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_22
      description: Get credentials for Land Registry with 2.0 data model LandStatementCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "LandStatementCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "LandStatementCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Cred_2_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_23
      description: Get credentials for Land Registry with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_Cred_2_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_24
      description: Get credentials for Land Registry with 2.0 data model with RegistrationReceiptCredential all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistry
      outputTemplate: injicertify/VCILandRegistry/GetCredentialForLandRegistry/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForLandRegistry_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Cred_2_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "RegistrationReceiptCredential"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "RegistrationReceiptCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'