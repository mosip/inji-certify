GenerateTokenForRevocation:
   InjiCertify_ESignet_GenerateToken_ForLandRegistry_Cred1_Valid_Smoke_For_Revocation_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/oauth/v2/token
      uniqueIdentifier: TC_esignetDependent_GenerateToken_01
      description: Generate Token for revocation for cred1
      role: noauth
      restMethod: post
      inputTemplate: injicertify/Revocation/GenerateTokenForRevocation/GenerateTokenForRevocation
      outputTemplate: injicertify/Revocation/GenerateTokenForRevocation/GenerateTokenForRevocationResult
      input: '{
		  "grant_type": "authorization_code",
		  "code": "$ID:ESignet_AuthorizationCode_For_landregistry_Cred1_All_Valid_Smoke_For_Revocation_sid_code$",
		  "client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry2_all_Valid_Smoke_sid_clientId$",
		  "client_assertion_type": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
		  "client_assertion": "$CLIENT_ASSERTION_JWT$",
		  "redirect_uri": "$IDPREDIRECTURI$",
  		  "code_verifier": "$CODEVERIFIER$"
}'
      output: '{
   		"token_type": "Bearer"
}'
   InjiCertify_ESignet_GenerateToken_ForLandRegistry_Cred2_Valid_Smoke_For_Revocation_sid:
      endPoint: $ESIGNETMOCKIDABASEURL$/v1/esignet/oauth/v2/token
      uniqueIdentifier: TC_esignetDependent_GenerateToken_02
      description: Generate Token for revocation for cred2
      role: noauth
      restMethod: post
      inputTemplate: injicertify/Revocation/GenerateTokenForRevocation/GenerateTokenForRevocation
      outputTemplate: injicertify/Revocation/GenerateTokenForRevocation/GenerateTokenForRevocationResult
      input: '{
		  "grant_type": "authorization_code",
		  "code": "$ID:ESignet_AuthorizationCode_For_landregistry_Cred2_All_Valid_Smoke_For_Revocation_sid_code$",
		  "client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry2_all_Valid_Smoke_sid_clientId$",
		  "client_assertion_type": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
		  "client_assertion": "$CLIENT_ASSERTION_JWT$",
		  "redirect_uri": "$IDPREDIRECTURI$",
  		  "code_verifier": "$CODEVERIFIER$"
}'
      output: '{
   		"token_type": "Bearer"
}'