UpdateCredentialStatus:
   InjiCertify_UpdateCredentialStatus_ForLandRegistry_Revocation_Flow_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/credentials/status
      uniqueIdentifier: TC_InjiCertify_Update_Credential_Status_01
      description: Update credential status for revocation
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/Revocation/UpdateCredentialStatus/UpdateCredentialStatus
      outputTemplate: injicertify/Revocation/UpdateCredentialStatus/UpdateCredentialStatusResult
      input: '{
        "credentialId": "$ID:GetDataFromLedgerTable_For_LandRegistry_Valid_smoke_Pos_sid_credential_id$",
        "id": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "type": "BitstringStatusListEntry",
        "statusPurpose": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusPurpose$",
        "statusListIndex": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListIndex$",
        "statusListCredential": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "status": "true",
      	"indexAllocator": "string"
}'
      output: '{
}'
   InjiCertify_UpdateCredentialStatus_ForLandRegistry_Revocation_invalid_credentialId_Neg:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/credentials/status
      uniqueIdentifier: TC_InjiCertify_Update_Credential_Status_02
      description: Update credential status with invalid credentialId
      role: noauth
      checkOnlyStatusCodeInResponse: true
      restMethod: post
      inputTemplate: injicertify/Revocation/UpdateCredentialStatus/UpdateCredentialStatus
      outputTemplate: injicertify/responseCode
      input: '{
        "credentialId": "abcdef",
        "id": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "type": "BitstringStatusListEntry",
        "statusPurpose": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusPurpose$",
        "statusListIndex": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListIndex$",
        "statusListCredential": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "status": "true",
      	"indexAllocator": "string"
}'
      output: '{
	"responseCode": "404"    
    }'
   InjiCertify_UpdateCredentialStatus_ForLandRegistry_Revocation_without_credentialId_Neg:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/credentials/status
      uniqueIdentifier: TC_InjiCertify_Update_Credential_Status_03
      description: Update credential status without credentialid
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/Revocation/UpdateCredentialStatus/UpdateCredentialStatus
      outputTemplate: injicertify/error
      input: '{
        "credentialId": "$REMOVE$",
        "id": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "type": "BitstringStatusListEntry",
        "statusPurpose": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusPurpose$",
        "statusListIndex": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListIndex$",
        "statusListCredential": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "status": "true",
      	"indexAllocator": "string"
}'
      output: '{
      "errors": [
      {
       "errorCode": "must not be blank"
       }
       ]
    }'
   InjiCertify_UpdateCredentialStatus_ForLandRegistry_Revocation_invalid_status_Neg:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/credentials/status
      uniqueIdentifier: TC_InjiCertify_Update_Credential_Status_04
      description: Update credential status invalid status value
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/Revocation/UpdateCredentialStatus/UpdateCredentialStatus
      outputTemplate: injicertify/error
      input: '{
        "credentialId": "$REMOVE$",
        "id": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "type": "BitstringStatusListEntry",
        "statusPurpose": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusPurpose$",
        "statusListIndex": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListIndex$",
        "statusListCredential": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "status": "pass",
      	"indexAllocator": "string"
}'
      output: '{
      "errors": [
      {
       "errorCode": "unknown_error"
       }
       ]
    }'
   InjiCertify_UpdateCredentialStatus_ForLandRegistry_Revocation_invalid_status_Neg:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/credentials/status
      uniqueIdentifier: TC_InjiCertify_Update_Credential_Status_04
      description: Update credential status without status
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/Revocation/UpdateCredentialStatus/UpdateCredentialStatus
      outputTemplate: injicertify/error
      input: '{
        "credentialId": "$REMOVE$",
        "id": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "type": "BitstringStatusListEntry",
        "statusPurpose": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusPurpose$",
        "statusListIndex": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListIndex$",
        "statusListCredential": "$ID:LedgerSearchAPI_ForLandRegistry_Revocation_Flow_all_Valid_Smoke_Sid_statusListCredentialUrl$",
        "status": "$REMOVE$",
      	"indexAllocator": "string"
}'
      output: '{
      "errors": [
      {
       "errorCode": "must not be null"
       }
       ]
    }'          