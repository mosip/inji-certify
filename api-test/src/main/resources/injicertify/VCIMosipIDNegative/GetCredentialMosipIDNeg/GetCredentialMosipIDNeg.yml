GetCredentialMosipIDNeg:
   InjiCertify_GetCredentialMosipID_IdpAccessToken_invalid_format_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_02      
      description: Get Mosipid verifiable credential with format value given invalid    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "abscefh",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_credential_format"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_without_format_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_03      
      description: Get Mosipid verifiable credential without format field    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_vc_format"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_spaces_format_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_05     
      description: Get Mosipid verifiable credential with format value as spaces    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "    ",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_vc_format"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_jwt_vc_json_format_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_06     
      description: Get Mosipid verifiable credential with format value as jwt_vc_json    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "jwt_vc_json",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "not_implemented"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_jwt_vc_json-ld_format_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_07     
      description: Get Mosipid verifiable credential with format value as jwt_vc_json-ld    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "jwt_vc_json-ld",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "not_implemented"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_multiple_format_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_08     
      description: Get Mosipid verifiable credential with format given multiple values    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc, jwt_vc_json-ld",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_vc_format"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_without_credential_definition_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_09      
      description: Get Mosipid verifiable credential without credential definition type value    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_request"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_with_one_credentialType_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_10      
      description: Get Mosipid verifiable credential with credential value given only one    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_credential_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_with_credentialType_one_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_11      
      description: Get Mosipid verifiable credential with credential value given only one    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_credential_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_with_credentialType_random_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_12     
      description: Get Mosipid verifiable credential with credential type value given random    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "fhfhfhg"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_credential_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_without_proof_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_13     
      description: Get Mosipid verifiable credential without proof    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$REMOVE$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Missing_Typ_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_17    
      description: Get Mosipid verifiable credential without prooftype value    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "$REMOVE$",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_empty_proofType_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_18    
      description: Get Mosipid verifiable credential empty prooftype value    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_proof_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_onlyspaces_proofType_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_19    
      description: Get Mosipid verifiable credential only spaces prooftype value    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "     ",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_proof_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_invalid_proofValue_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_20    
      description: Get Mosipid verifiable credential invalid proof value 
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "_JWT_3$"
}'
      output: '{
      "error": "unsupported_proof_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_empty_proofjwtValue_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_21    
      description: Get Mosipid verifiable credential empty proofjwt value 
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": ""
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_spaces_proofjwtValue_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_22    
      description: Get Mosipid verifiable credential spaces proofjwt value 
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "   "
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_invalid_jwt_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_23    
      description: Get Mosipid verifiable credential invalid jwt value 
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_CWT_3$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_invalid_prooftype_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_24    
      description: Get Mosipid verifiable credential invalid prooftype value 
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "CWT",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_invalid_prooftype1_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_25    
      description: Get Mosipid verifiable credential invalid prooftype value 
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt123",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "unsupported_proof_type"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Invalid_C_nonce_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_26      
      description: Get Mosipid Verifiable credential with invalid c_nonce     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Exp_C_nonce_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_27      
      description: Get Mosipid Verifiable credential with expiry c_nonce     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Invalid_JwkHeader_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_28      
      description: Get Mosipid Verifiable credential with invalid ProofJWT header     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Invalid_Typ_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_29      
      description: Get Mosipid Verifiable credential with invalid Type header    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Empty_Typ_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_30      
      description: Get Mosipid Verifiable credential with empty Type     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Missing_JwkHeader_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_32      
      description: Get Mosipid Verifiable credential with missing ProofJWT header     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Invalid_Aud_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_33      
      description: Get Mosipid Verifiable credential with invalid aud value     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_Invalid_Iss_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_34      
      description: Get Mosipid Verifiable credential with invalid iss value     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_proof"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_empty_context_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_35      
      description: Get Mosipid Verifiable credential with empty context value     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$REMOVE$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "invalid_request"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_same_otp_multipletimes_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_36      
      description: Get Mosipid Verifiable credential with invalid otp     
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$REMOVE$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "IDA-KYE-003"
}'
   InjiCertify_GetCredentialMosipID_IdpAccessToken_OTP_expiry_Neg:
      endPoint: $INJICERTIFYMOSIPIDBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_injicertify_Mosipidcredentialissuance_37      
      description: Get Mosipid Verifiable credential with expiry otp    
      role: resident
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMosipIDNegative/GetCredentialMosipIDNeg/GetCredentialMosipIDNeg
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_MOSIPID_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateTokenVCIMOSIPID_uin_Valid_Smoke_sid_For_Neg_flow_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "$REMOVE$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$"
}'
      output: '{
      "error": "IDA-KYE-003"
}'