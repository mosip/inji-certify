GetCredentialForEccR1:
   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForEccR1signature_01
      description: Get credentials for Landregistry with EccR1 signature
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistry
      outputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry_EccR1_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "landstatement_EccR1"}],
      	"@context": [{context: "$VCICONTEXTURL$"}, {context: "https://mosip.github.io/inji-config/contexts/landregistry-statement-context-EccR1.json"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT$",
        "credentialType": "landstatement_EccR1",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_Sign_ES256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForEccR1Siganture_02
      description: Get credentials for Landregistry with EccR1 signature and request signing with P-256 1.1 model
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistry
      outputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry_EccR1_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "landstatement_EccR1"}],
      	"@context": [{context: "$VCICONTEXTURL$"}, {context: "https://mosip.github.io/inji-config/contexts/landregistry-statement-context-EccR1.json"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ES256$",
        "credentialType": "landstatement_EccR1",
        "signatureSupported": "ES256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForEccR1Siganture_03
      description: Get credentials for Land Registry with 2.0 data model LandStatementCredential all valid data
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistry
      outputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry_EccR1_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "landstatement_EccR1"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}, {context: "https://mosip.github.io/inji-config/contexts/landregistry-statement-context-EccR1.json"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ES256$",
        "credentialType": "landstatement_EccR1",
        "signatureSupported": "ES256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_2.0_Sign_PS256_all_Valid_Smoke:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_04
      description: Get credentials for Land Registry with 2.0 data model LandStatementCredential all valid data
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistry
      outputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistryResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry_EccR1_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "landstatement_EccR1"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}, {context: "https://mosip.github.io/inji-config/contexts/landregistry-statement-context-EccR1.json"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "landstatement_EccR1",
        "signatureSupported": "PS256"
}'
      output: '
}'
   InjiCertify_GetCredentialForLandRegistry_IdpAccessToken_null_proof_jwt_Neg:
      endPoint: $INJICERTIFYBASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForLandRegistry_13
      description: Get credentials for Land Registry with 2.0 data model LandStatementCredential all valid data
      role: noauth
      checkErrorsOnlyInResponse: true
      restMethod: post
      inputTemplate: injicertify/EccR1/GetCredentialForLandRegistryEccR1/GetCredentialForLandRegistry
      outputTemplate: injicertify/error2
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_For_LandRegistry_EccR1_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForLandRegistry_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "landstatement_EccR1"}],
      	"@context": [{context: "$VCICONTEXTURL_2.0$"}, {context: "https://mosip.github.io/inji-config/contexts/landregistry-statement-context-EccR1.json"}],
      	"proof_type": "jwt",
        "proof_jwt": "null",
        "credentialType": "landstatement_EccR1",
        "signatureSupported": "PS256"
}'
      output: '{
		"error": "invalid_proof"
}'