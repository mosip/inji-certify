GetCredentialForMockIDA:
   InjiCertify_GetCredentialForMockIDA_IdpAccessToken_all_Valid_Smoke:
      endPoint: $INJICERTIFYMOCKIDABASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForMockIDA_01
      description: Get credentials for Mock with all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMockIDA/GetCredentialForMockIDA/GetCredentialForMockIDA
      outputTemplate: injicertify/VCIMockIDA/GetCredentialForMockIDA/GetCredentialForMockIDAResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForMockIDA_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForMockIDA_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MockVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_3$",
        "credentialType": "MockVerifiableCredential",
        "signatureSupported": "RS256"
}'
      output: '{
}'

   InjiCertify_GetCredentialForMockIDA_IdpAccessToken_ED25519_Sign_all_Valid_Smoke:
      endPoint: $INJICERTIFYMOCKIDABASEURL$/v1/certify/issuance/credential
      uniqueIdentifier: TC_InjiCertify_GetCredentialForMockIDA_01
      description: Get credentials for Mock with all valid data
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: injicertify/VCIMockIDA/GetCredentialForMockIDA/GetCredentialForMockIDA
      outputTemplate: injicertify/VCIMockIDA/GetCredentialForMockIDA/GetCredentialForMockIDAResult
      input: '{
      	"client_id": "$ID:ESignet_CreateOIDCClientV2_ForMockIDA_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:ESignet_GenerateToken_ForMockIDA_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MockVerifiableCredential"}],
      	"@context": [{context: "$VCICONTEXTURL$"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOF_JWT_ED25519$",
        "credentialType": "MockVerifiableCredential",
        "signatureSupported": "Ed25519"
}'
      output: '{
}'