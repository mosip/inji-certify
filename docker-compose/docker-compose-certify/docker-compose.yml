version: '3.8'

services:
  database:
    image: 'postgres:latest'
    ports:
      - 5456:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./esignet_init.sql:/docker-entrypoint-initdb.d/esignet_init.sql
      - ./certify_init.sql:/docker-entrypoint-initdb.d/certify_init.sql
      - ./mock_identity_init.sql:/docker-entrypoint-initdb.d/mock_identity_init.sql
    networks:
      - network
  artifactory-server:
    image: 'mosipid/artifactory-server:0.9.0-INJI'
    ports:
      - 8080:8080
    networks:
      - network
  mock-identity-system:
    image: 'mosipid/mock-identity-system:0.9.3'
    user: root
    ports:
      - 8082:8082
    environment:
      - artifactory_url_env=http://artifactory-server:8080/
      - container_user=mosip
      - active_profile_env=default
      - SPRING_CONFIG_NAME=mock-identity-system
      - SPRING_CONFIG_LOCATION=/home/mosip/mock-identity-system-default.properties
    depends_on:
      - database
      - artifactory-server
    volumes:
      - ./config/mock-identity-system-default.properties:/home/mosip/mock-identity-system-default.properties
    networks:
      - network
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass redis
    volumes:
      - cache:/data
    networks:
      - network
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - network
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "esignet-linked:1:1,esignet-consented:1:1"
    networks:
      - network
  esignet:
    image: 'mosipid/esignet:1.4.0'
    user: root
    ports:
      - 8088:8088
    environment:
      - artifactory_url_env=http://artifactory-server:8080/
      - container_user=mosip
      - active_profile_env=default,mock-identity
      - SPRING_CONFIG_NAME=esignet
      - SPRING_CONFIG_LOCATION=/home/mosip/config/
      - esignet_wrapper_url_env=http://artifactory-server:8080/artifactory/libs-release-local/esignet/esignet-wrapper.zip
    depends_on:
      - database
      - artifactory-server
      - kafka
    volumes:
      - ./config/esignet-default.properties:/home/mosip/config/esignet-default.properties
      - ./config/esignet-sunbird-insurance.properties:/home/mosip/config/esignet-sunbird-insurance.properties
      - ./config/esignet-mock-identity.properties:/home/mosip/config/esignet-mock-identity.properties
      - ./data/ESIGNET_PKCS12:/home/mosip/ESIGNET_PKCS12
#      - ./loader_path/esignet/:/home/mosip/additional_jars/
    networks:
      - network
  certify:
    image: mosipid/inji-certify:0.9.0
    user: root
    ports:
      - 8090:8090
    environment:
      - artifactory_url_env=http://artifactory-server:8080
      - container_user=mosip
      - active_profile_env=default,mock-identity
      - SPRING_CONFIG_NAME=certify
      - SPRING_CONFIG_LOCATION=/home/mosip/config/
#      - enable_certify_artifactory=false
#      - download_hsm_client=true
    volumes:
      - ./config/certify-default.properties:/home/mosip/config/certify-default.properties
      - ./config/certify-sunbird-insurance.properties:/home/mosip/config/certify-sunbird-insurance.properties
      - ./config/certify-mock-identity.properties:/home/mosip/config/certify-mock-identity.properties
      - ./data/CERTIFY_PKCS12:/home/mosip/CERTIFY_PKCS12
#      - ./loader_path/certify/:/home/mosip/additional_jars/
    depends_on:
      - esignet
    networks:
      - network
  esignet-ui:
    image: 'mosipid/oidc-ui:1.4.0'
    user: root
    ports:
      - 3001:3000
    depends_on:
      - esignet
      - artifactory-server
    environment:
      - artifactory_url_env=http://artifactory-server:8080/
      - container_user=mosip
      - DEFAULT_WELLKNOWN=%5B%7B%22name%22%3A%22OpenID%20Configuration%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-configuration%22%7D%2C%7B%22name%22%3A%22Jwks%20Json%22%2C%22value%22%3A%22%2F.well-known%2Fjwks.json%22%7D%2C%7B%22name%22%3A%22Authorization%20Server%22%2C%22value%22%3A%22%2F.well-known%2Foauth-authorization-server%22%7D%2C%7B%22name%22%3A%22OpenID%20Credential%20Issuer%22%2C%22value%22%3A%22%2F.well-known%2Fopenid-credential-issuer%22%7D%5D
      - SIGN_IN_WITH_ESIGNET_PLUGIN_URL=http://artifactory-server:8080/artifactory/libs-release-local/mosip-plugins/sign-in-with-esignet.zip
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - network

networks:
  network:
    name: mosip_network
    external: true

volumes:
  cache:
    driver: local