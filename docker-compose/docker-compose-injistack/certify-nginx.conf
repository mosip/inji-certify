server {
    listen 80;
    # Default location for normal static files

    # Proxy API requests to mimoto-service
    location /v1/certify/ {
        proxy_pass http://certify:8090/v1/certify/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Cache-Control' always;

        # Handle OPTIONS requests (for pre-flight checks)
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    location /.well-known {
            proxy_pass http://certify:8090/v1/certify/issuance/.well-known;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Cache-Control' always;

            # Handle OPTIONS requests (for pre-flight checks)
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}