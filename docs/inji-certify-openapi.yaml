openapi: 3.0.1
info:
  version: v0
  title: OpenAPI definition
servers:
  - url: 'http://localhost:8090/v1/certify'
    description: Generated server url
paths:
  '/credential-configurations/{configurationId}':
    get:
      tags:
        - Credential Configuration
      summary: Fetch credential configuration
      description: Retrieves a credential configuration by its unique ID. Returns an error if the configuration does not exist or is not active.
      operationId: getCredentialConfigurationById
      parameters:
        - name: configurationId
          description: Unique key identifier for the credential configuration.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Credential configuration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialConfigurationDTO'
              examples:
                Example 1:
                  value:
                    vcTemplate: eyJjcmVkZW50aWFsU3ViamVjdCI6eyJSZWdpc3RyYXRpb25EYXRlIjoiJHtyZWdpc3RyYXRpb25fZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0UHJvY2Vzc2luZ0RhdGUiOiIke2NvbnNlcnZhdGlvbl91bml0X3Byb2Nlc3NpbmdfZGF0ZX0iLCJMYXRpdHVkZSI6IiR7bGF0aXR1ZGV9IiwiQ29uc29saWRhdGVkUnVyYWxBcmVhIjoiJHtjb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJMZWdhbFJlc2VydmVMb2NhdGlvbiI6IiR7bG9jYXRpb25fb2ZfbGVnYWxfcmVzZXJ2ZX0iLCJSZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7cmVnaXN0ZXJlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiUmVzdHJpY3RlZFVzZUFyZWFUb0JlUmVzdG9yZWQiOiIke3Jlc3RyaWN0ZWRfdXNlX2FyZWFfdG9fcmVjb21wb3NlfSIsIlRvdGFsRGVjbGFyZWRMZWdhbFJlc2VydmUiOiIke3RvdGFsX2xlZ2FsX3Jlc2VydmVfZGVjbGFyZWR9IiwiUGVybWFuZW50UHJlc2VydmF0aW9uQXJlYXMiOiIke3Blcm1hbmVudF9wcmVzZXJ2YXRpb25fYXJlYXNfYXBwfSIsIkFkbWluaXN0cmF0aXZlRWFzZW1lbnRBcmVhIjoiJHthZG1pbmlzdHJhdGl2ZV9lYXNlbWVudF9hcmVhfSIsIlJlc3RyaWN0ZWRVc2VBcmVhcyI6IiR7cmVzdHJpY3RlZF91c2VfYXJlYXN9IiwiUFJBQ29uZGl0aW9uIjoiJHtwcmFfY29uZGl0aW9ufSIsImlkIjoiJHtfaG9sZGVySWR9IiwiTGVnYWxSZXNlcnZlRGVmaWNpdE9yRXhjZXNzIjoiJHtsZWdhbF9yZXNlcnZlX2RlZmljaXRfZXhjZXNzfSIsIkxlZ2FsUmVzZXJ2ZUFyZWFUb0JlUmVzdG9yZWQiOiIke2xlZ2FsX3Jlc2VydmVfYXJlYV90b19yZWNvbXBvc2V9IiwiRW1iYXJnZ2VkQXJlYU92ZXJsYXBQZXJjZW50YWdlIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwX3BlcmNlbnRhZ2V9IiwiRW1iYXJnZ2VkQXJlYURlc2NyaXB0aW9uIjoiJHtlbWJhcmdvZWRfYXJlYV9kZXNjcmlwdGlvbn0iLCJHZW9yZWZlcmVuY2VkTGVnYWxSZXNlcnZlQXJlYSI6IiR7Z2VvcmVmZXJlbmNlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiQVBQSW5Db25zb2xpZGF0ZWRSdXJhbEFyZWEiOiIke2FwcF9pbl9jb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJFbWJhcmdnZWRBcmVhUHJvY2Vzc2luZ0RhdGUiOiIke2VtYmFyZ29lZF9hcmVhX3Byb2Nlc3NpbmdfZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0RGVzY3JpcHRpb24iOiIke2NvbnNlcnZhdGlvbl91bml0X2Rlc2NyaXB0aW9ufSIsIk11bmljaXBhbGl0eSI6IiR7bXVuaWNpcGFsaXR5fSIsIkVtYmFyZ2dlZEFyZWFPdmVybGFwIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwfSIsIkFwcHJvdmVkVW5yZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7YXBwcm92ZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhX25vdF9yZWdpc3RlcmVkfSIsIlJlZ2lzdHJhdGlvblN0YXR1cyI6IiR7cmVnaXN0cmF0aW9uX3N0YXR1c30iLCJOdW1iZXJPZkNBUiI6IiR7Y2FyX3JlZ2lzdHJhdGlvbl9udW1iZXJ9IiwiUnVyYWxQcm9wZXJ0eUFyZWEiOiIke3J1cmFsX3Byb3BlcnR5X2FyZWF9IiwiTG9uZ2l0dWRlIjoiJHtsb25naXR1ZGV9IiwiQ29uc2VydmF0aW9uVW5pdE92ZXJsYXBBcmVhIjoiJHtjb25zZXJ2YXRpb25fdW5pdF9vdmVybGFwX2FyZWF9IiwiRXh0ZXJuYWxDb25kaXRpb24iOiIke2V4dGVybmFsX2NvbmRpdGlvbn0iLCJMYXN0TW9kaWZpY2F0aW9uRGF0ZSI6IiR7ZGF0ZV9vZl9sYXN0X2FtZW5kbWVudH0iLCJDb25zZXJ2YXRpb25Vbml0T3ZlcmxhcFBlcmNlbnRhZ2UiOiIke2NvbnNlcnZhdGlvbl91bml0X292ZXJsYXBfcGVyY2VudGFnZX0iLCJOYXRpdmVWZWdldGF0aW9uUmVtbmFudEFyZWEiOiIke25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJBUFBJbk5hdGl2ZVZlZ2V0YXRpb25SZW1uYW50QXJlYSI6IiR7YXBwX2luX25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJQZXJtYW5lbnRQcmVzZXJ2YXRpb25BcmVhc1RvQmVSZXN0b3JlZCI6IiR7cGVybWFuZW50X3ByZXNlcnZhdGlvbl9hcmVhc190b19yZWNvbXBvc2V9IiwiR3JvdW5kQ292ZXJhZ2UiOiIke2xhbmRfY292ZXJ9IiwiUHJvcG9zZWRMZWdhbFJlc2VydmVBcmVhIjoiJHtwcm9wb3NlZF9sZWdhbF9yZXNlcnZlX2FyZWF9In0sInZhbGlkVW50aWwiOiIke3ZhbGlkVW50aWx9IiwidmFsaWRGcm9tIjoiJHt2YWxpZEZyb219IiwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsImxhbmRzdGF0ZW1lbnRfZGF0YUludGVncml0eSJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbHMvdjIiLCJodHRwczovL21vc2lwLmdpdGh1Yi5pby9pbmppLWNvbmZpZy9jb250ZXh0cy9sYW5kcmVnaXN0cnktc3RhdGVtZW50LWRhdGFJbnRlZ3JpdHktY29udGV4dC1hdXRvbWF0aW9uLmpzb24iXSwiaXNzdWVyIjoiJHtfaXNzdWVyfSJ9
                    keyManagerRefId: ED25519_SIGN
                    credentialSubjectDefinition:
                      APPInConsolidatedRuralArea:
                        display:
                          - name: APP in Consolidated Rural Area
                            locale: en
                      PermanentPreservationAreas:
                        display:
                          - name: Permanent Preservation Areas
                            locale: en
                    displayOrder:
                      - NumberOfCAR
                      - RegistrationDate
                      - LastModificationDate
                      - RuralPropertyArea
                      - Latitude
                      - Longitude
                      - Municipality
                      - ExternalCondition
                      - RegistrationStatus
                      - PRACondition
                      - GroundCoverage
                      - NativeVegetationRemnantArea
                      - ConsolidatedRuralArea
                      - AdministrativeEasementArea
                      - LegalReserveLocation
                      - RegisteredLegalReserveArea
                      - GeoreferencedLegalReserveArea
                      - ApprovedUnregisteredLegalReserveArea
                      - ProposedLegalReserveArea
                      - TotalDeclaredLegalReserve
                      - PermanentPreservationAreas
                      - APPInConsolidatedRuralArea
                      - APPInNativeVegetationRemnantArea
                      - RestrictedUseAreas
                      - LegalReserveDeficitOrExcess
                      - LegalReserveAreaToBeRestored
                      - PermanentPreservationAreasToBeRestored
                    didUrl: 'did:web:www.example.com:inji-config:collab:landregistry'
                    contextURLs:
                      - 'https://www.w3.org/ns/credentials/v2'
                      - 'https://www.example.com/inji-config/contexts/landregistry-statement-dataIntegrity-context-automation.json'
                    signatureCryptoSuite: eddsa-rdfc-2022
                    credentialConfigKeyId: landstatement_dataIntegrity_2.0
                    metaDataDisplay:
                      - background_image:
                          uri: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                        background_color: '#ebfaff'
                        name: land statement for data integrity
                        logo:
                          alt_text: land statement Logo
                          url: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                        text_color: '#000000'
                        locale: en
                    credentialFormat: ldp_vc
                    scope: land_statement_vc_ldp
                    keyManagerAppId: CERTIFY_VC_SIGN_ED25519
                    credentialTypes:
                      - VerifiableCredential
                      - landstatement_dataIntegrity
                    signatureAlgo: EdDSA
        '404':
          description: Credential configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponseWrapper'
              examples:
                Example 1:
                  value:
                    responseTime: '2025-08-07T13:02:15.071Z'
                    response: null
                    errors:
                      - errorCode: invalid_request
                        errorMessage: 'Configuration not found with the provided id: MockVerifiableCredential_SD_JWT2'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
    put:
      tags:
        - Credential Configuration
      summary: Update credential configuration
      description: Updates an existing credential configuration. Performs similar validations as the creation endpoint.
      operationId: updateCredentialConfiguration
      parameters:
        - name: configurationId
          description: Unique key identifier for the credential configuration.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialConfigurationDTO'
            examples:
              Example 1:
                value:
                  vcTemplate: eyJjcmVkZW50aWFsU3ViamVjdCI6eyJSZWdpc3RyYXRpb25EYXRlIjoiJHtyZWdpc3RyYXRpb25fZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0UHJvY2Vzc2luZ0RhdGUiOiIke2NvbnNlcnZhdGlvbl91bml0X3Byb2Nlc3NpbmdfZGF0ZX0iLCJMYXRpdHVkZSI6IiR7bGF0aXR1ZGV9IiwiQ29uc29saWRhdGVkUnVyYWxBcmVhIjoiJHtjb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJMZWdhbFJlc2VydmVMb2NhdGlvbiI6IiR7bG9jYXRpb25fb2ZfbGVnYWxfcmVzZXJ2ZX0iLCJSZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7cmVnaXN0ZXJlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiUmVzdHJpY3RlZFVzZUFyZWFUb0JlUmVzdG9yZWQiOiIke3Jlc3RyaWN0ZWRfdXNlX2FyZWFfdG9fcmVjb21wb3NlfSIsIlRvdGFsRGVjbGFyZWRMZWdhbFJlc2VydmUiOiIke3RvdGFsX2xlZ2FsX3Jlc2VydmVfZGVjbGFyZWR9IiwiUGVybWFuZW50UHJlc2VydmF0aW9uQXJlYXMiOiIke3Blcm1hbmVudF9wcmVzZXJ2YXRpb25fYXJlYXNfYXBwfSIsIkFkbWluaXN0cmF0aXZlRWFzZW1lbnRBcmVhIjoiJHthZG1pbmlzdHJhdGl2ZV9lYXNlbWVudF9hcmVhfSIsIlJlc3RyaWN0ZWRVc2VBcmVhcyI6IiR7cmVzdHJpY3RlZF91c2VfYXJlYXN9IiwiUFJBQ29uZGl0aW9uIjoiJHtwcmFfY29uZGl0aW9ufSIsImlkIjoiJHtfaG9sZGVySWR9IiwiTGVnYWxSZXNlcnZlRGVmaWNpdE9yRXhjZXNzIjoiJHtsZWdhbF9yZXNlcnZlX2RlZmljaXRfZXhjZXNzfSIsIkxlZ2FsUmVzZXJ2ZUFyZWFUb0JlUmVzdG9yZWQiOiIke2xlZ2FsX3Jlc2VydmVfYXJlYV90b19yZWNvbXBvc2V9IiwiRW1iYXJnZ2VkQXJlYU92ZXJsYXBQZXJjZW50YWdlIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwX3BlcmNlbnRhZ2V9IiwiRW1iYXJnZ2VkQXJlYURlc2NyaXB0aW9uIjoiJHtlbWJhcmdvZWRfYXJlYV9kZXNjcmlwdGlvbn0iLCJHZW9yZWZlcmVuY2VkTGVnYWxSZXNlcnZlQXJlYSI6IiR7Z2VvcmVmZXJlbmNlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiQVBQSW5Db25zb2xpZGF0ZWRSdXJhbEFyZWEiOiIke2FwcF9pbl9jb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJFbWJhcmdnZWRBcmVhUHJvY2Vzc2luZ0RhdGUiOiIke2VtYmFyZ29lZF9hcmVhX3Byb2Nlc3NpbmdfZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0RGVzY3JpcHRpb24iOiIke2NvbnNlcnZhdGlvbl91bml0X2Rlc2NyaXB0aW9ufSIsIk11bmljaXBhbGl0eSI6IiR7bXVuaWNpcGFsaXR5fSIsIkVtYmFyZ2dlZEFyZWFPdmVybGFwIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwfSIsIkFwcHJvdmVkVW5yZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7YXBwcm92ZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhX25vdF9yZWdpc3RlcmVkfSIsIlJlZ2lzdHJhdGlvblN0YXR1cyI6IiR7cmVnaXN0cmF0aW9uX3N0YXR1c30iLCJOdW1iZXJPZkNBUiI6IiR7Y2FyX3JlZ2lzdHJhdGlvbl9udW1iZXJ9IiwiUnVyYWxQcm9wZXJ0eUFyZWEiOiIke3J1cmFsX3Byb3BlcnR5X2FyZWF9IiwiTG9uZ2l0dWRlIjoiJHtsb25naXR1ZGV9IiwiQ29uc2VydmF0aW9uVW5pdE92ZXJsYXBBcmVhIjoiJHtjb25zZXJ2YXRpb25fdW5pdF9vdmVybGFwX2FyZWF9IiwiRXh0ZXJuYWxDb25kaXRpb24iOiIke2V4dGVybmFsX2NvbmRpdGlvbn0iLCJMYXN0TW9kaWZpY2F0aW9uRGF0ZSI6IiR7ZGF0ZV9vZl9sYXN0X2FtZW5kbWVudH0iLCJDb25zZXJ2YXRpb25Vbml0T3ZlcmxhcFBlcmNlbnRhZ2UiOiIke2NvbnNlcnZhdGlvbl91bml0X292ZXJsYXBfcGVyY2VudGFnZX0iLCJOYXRpdmVWZWdldGF0aW9uUmVtbmFudEFyZWEiOiIke25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJBUFBJbk5hdGl2ZVZlZ2V0YXRpb25SZW1uYW50QXJlYSI6IiR7YXBwX2luX25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJQZXJtYW5lbnRQcmVzZXJ2YXRpb25BcmVhc1RvQmVSZXN0b3JlZCI6IiR7cGVybWFuZW50X3ByZXNlcnZhdGlvbl9hcmVhc190b19yZWNvbXBvc2V9IiwiR3JvdW5kQ292ZXJhZ2UiOiIke2xhbmRfY292ZXJ9IiwiUHJvcG9zZWRMZWdhbFJlc2VydmVBcmVhIjoiJHtwcm9wb3NlZF9sZWdhbF9yZXNlcnZlX2FyZWF9In0sInZhbGlkVW50aWwiOiIke3ZhbGlkVW50aWx9IiwidmFsaWRGcm9tIjoiJHt2YWxpZEZyb219IiwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsImxhbmRzdGF0ZW1lbnRfZGF0YUludGVncml0eSJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbHMvdjIiLCJodHRwczovL21vc2lwLmdpdGh1Yi5pby9pbmppLWNvbmZpZy9jb250ZXh0cy9sYW5kcmVnaXN0cnktc3RhdGVtZW50LWRhdGFJbnRlZ3JpdHktY29udGV4dC1hdXRvbWF0aW9uLmpzb24iXSwiaXNzdWVyIjoiJHtfaXNzdWVyfSJ9
                  keyManagerRefId: ED25519_SIGN
                  credentialSubjectDefinition:
                    APPInConsolidatedRuralArea:
                      display:
                        - name: APP in Consolidated Rural Area
                          locale: en
                    PermanentPreservationAreas:
                      display:
                        - name: Permanent Preservation Areas
                          locale: en
                  displayOrder:
                    - NumberOfCAR
                    - RegistrationDate
                    - LastModificationDate
                    - RuralPropertyArea
                    - Latitude
                    - Longitude
                    - Municipality
                    - ExternalCondition
                    - RegistrationStatus
                    - PRACondition
                    - GroundCoverage
                    - NativeVegetationRemnantArea
                    - ConsolidatedRuralArea
                    - AdministrativeEasementArea
                    - LegalReserveLocation
                    - RegisteredLegalReserveArea
                    - GeoreferencedLegalReserveArea
                    - ApprovedUnregisteredLegalReserveArea
                    - ProposedLegalReserveArea
                    - TotalDeclaredLegalReserve
                    - PermanentPreservationAreas
                    - APPInConsolidatedRuralArea
                    - APPInNativeVegetationRemnantArea
                    - RestrictedUseAreas
                    - LegalReserveDeficitOrExcess
                    - LegalReserveAreaToBeRestored
                    - PermanentPreservationAreasToBeRestored
                  didUrl: 'did:web:www.example.com:inji-config:collab:landregistry'
                  contextURLs:
                    - 'https://www.w3.org/ns/credentials/v2'
                    - 'https://www.example.com/inji-config/contexts/landregistry-statement-dataIntegrity-context-automation.json'
                  signatureCryptoSuite: eddsa-rdfc-2022
                  credentialConfigKeyId: landstatement_dataIntegrity_2.0
                  metaDataDisplay:
                    - background_image:
                        uri: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                      background_color: '#ebfaff'
                      name: land statement for data integrity
                      logo:
                        alt_text: land statement Logo
                        url: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                      text_color: '#000000'
                      locale: en
                  credentialFormat: ldp_vc
                  scope: land_statement_vc_ldp
                  keyManagerAppId: CERTIFY_VC_SIGN_ED25519
                  credentialTypes:
                    - VerifiableCredential
                    - landstatement_dataIntegrity
                  signatureAlgo: EdDSA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialConfigResponse'
              examples:
                Example 1:
                  value:
                    vcTemplate: eyJjcmVkZW50aWFsU3ViamVjdCI6eyJSZWdpc3RyYXRpb25EYXRlIjoiJHtyZWdpc3RyYXRpb25fZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0UHJvY2Vzc2luZ0RhdGUiOiIke2NvbnNlcnZhdGlvbl91bml0X3Byb2Nlc3NpbmdfZGF0ZX0iLCJMYXRpdHVkZSI6IiR7bGF0aXR1ZGV9IiwiQ29uc29saWRhdGVkUnVyYWxBcmVhIjoiJHtjb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJMZWdhbFJlc2VydmVMb2NhdGlvbiI6IiR7bG9jYXRpb25fb2ZfbGVnYWxfcmVzZXJ2ZX0iLCJSZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7cmVnaXN0ZXJlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiUmVzdHJpY3RlZFVzZUFyZWFUb0JlUmVzdG9yZWQiOiIke3Jlc3RyaWN0ZWRfdXNlX2FyZWFfdG9fcmVjb21wb3NlfSIsIlRvdGFsRGVjbGFyZWRMZWdhbFJlc2VydmUiOiIke3RvdGFsX2xlZ2FsX3Jlc2VydmVfZGVjbGFyZWR9IiwiUGVybWFuZW50UHJlc2VydmF0aW9uQXJlYXMiOiIke3Blcm1hbmVudF9wcmVzZXJ2YXRpb25fYXJlYXNfYXBwfSIsIkFkbWluaXN0cmF0aXZlRWFzZW1lbnRBcmVhIjoiJHthZG1pbmlzdHJhdGl2ZV9lYXNlbWVudF9hcmVhfSIsIlJlc3RyaWN0ZWRVc2VBcmVhcyI6IiR7cmVzdHJpY3RlZF91c2VfYXJlYXN9IiwiUFJBQ29uZGl0aW9uIjoiJHtwcmFfY29uZGl0aW9ufSIsImlkIjoiJHtfaG9sZGVySWR9IiwiTGVnYWxSZXNlcnZlRGVmaWNpdE9yRXhjZXNzIjoiJHtsZWdhbF9yZXNlcnZlX2RlZmljaXRfZXhjZXNzfSIsIkxlZ2FsUmVzZXJ2ZUFyZWFUb0JlUmVzdG9yZWQiOiIke2xlZ2FsX3Jlc2VydmVfYXJlYV90b19yZWNvbXBvc2V9IiwiRW1iYXJnZ2VkQXJlYU92ZXJsYXBQZXJjZW50YWdlIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwX3BlcmNlbnRhZ2V9IiwiRW1iYXJnZ2VkQXJlYURlc2NyaXB0aW9uIjoiJHtlbWJhcmdvZWRfYXJlYV9kZXNjcmlwdGlvbn0iLCJHZW9yZWZlcmVuY2VkTGVnYWxSZXNlcnZlQXJlYSI6IiR7Z2VvcmVmZXJlbmNlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiQVBQSW5Db25zb2xpZGF0ZWRSdXJhbEFyZWEiOiIke2FwcF9pbl9jb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJFbWJhcmdnZWRBcmVhUHJvY2Vzc2luZ0RhdGUiOiIke2VtYmFyZ29lZF9hcmVhX3Byb2Nlc3NpbmdfZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0RGVzY3JpcHRpb24iOiIke2NvbnNlcnZhdGlvbl91bml0X2Rlc2NyaXB0aW9ufSIsIk11bmljaXBhbGl0eSI6IiR7bXVuaWNpcGFsaXR5fSIsIkVtYmFyZ2dlZEFyZWFPdmVybGFwIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwfSIsIkFwcHJvdmVkVW5yZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7YXBwcm92ZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhX25vdF9yZWdpc3RlcmVkfSIsIlJlZ2lzdHJhdGlvblN0YXR1cyI6IiR7cmVnaXN0cmF0aW9uX3N0YXR1c30iLCJOdW1iZXJPZkNBUiI6IiR7Y2FyX3JlZ2lzdHJhdGlvbl9udW1iZXJ9IiwiUnVyYWxQcm9wZXJ0eUFyZWEiOiIke3J1cmFsX3Byb3BlcnR5X2FyZWF9IiwiTG9uZ2l0dWRlIjoiJHtsb25naXR1ZGV9IiwiQ29uc2VydmF0aW9uVW5pdE92ZXJsYXBBcmVhIjoiJHtjb25zZXJ2YXRpb25fdW5pdF9vdmVybGFwX2FyZWF9IiwiRXh0ZXJuYWxDb25kaXRpb24iOiIke2V4dGVybmFsX2NvbmRpdGlvbn0iLCJMYXN0TW9kaWZpY2F0aW9uRGF0ZSI6IiR7ZGF0ZV9vZl9sYXN0X2FtZW5kbWVudH0iLCJDb25zZXJ2YXRpb25Vbml0T3ZlcmxhcFBlcmNlbnRhZ2UiOiIke2NvbnNlcnZhdGlvbl91bml0X292ZXJsYXBfcGVyY2VudGFnZX0iLCJOYXRpdmVWZWdldGF0aW9uUmVtbmFudEFyZWEiOiIke25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJBUFBJbk5hdGl2ZVZlZ2V0YXRpb25SZW1uYW50QXJlYSI6IiR7YXBwX2luX25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJQZXJtYW5lbnRQcmVzZXJ2YXRpb25BcmVhc1RvQmVSZXN0b3JlZCI6IiR7cGVybWFuZW50X3ByZXNlcnZhdGlvbl9hcmVhc190b19yZWNvbXBvc2V9IiwiR3JvdW5kQ292ZXJhZ2UiOiIke2xhbmRfY292ZXJ9IiwiUHJvcG9zZWRMZWdhbFJlc2VydmVBcmVhIjoiJHtwcm9wb3NlZF9sZWdhbF9yZXNlcnZlX2FyZWF9In0sInZhbGlkVW50aWwiOiIke3ZhbGlkVW50aWx9IiwidmFsaWRGcm9tIjoiJHt2YWxpZEZyb219IiwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsImxhbmRzdGF0ZW1lbnRfZGF0YUludGVncml0eSJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbHMvdjIiLCJodHRwczovL21vc2lwLmdpdGh1Yi5pby9pbmppLWNvbmZpZy9jb250ZXh0cy9sYW5kcmVnaXN0cnktc3RhdGVtZW50LWRhdGFJbnRlZ3JpdHktY29udGV4dC1hdXRvbWF0aW9uLmpzb24iXSwiaXNzdWVyIjoiJHtfaXNzdWVyfSJ9
                    keyManagerRefId: ED25519_SIGN
                    credentialSubjectDefinition:
                      APPInConsolidatedRuralArea:
                        display:
                          - name: APP in Consolidated Rural Area
                            locale: en
                      PermanentPreservationAreas:
                        display:
                          - name: Permanent Preservation Areas
                            locale: en
                    displayOrder:
                      - NumberOfCAR
                      - RegistrationDate
                      - LastModificationDate
                      - RuralPropertyArea
                      - Latitude
                      - Longitude
                      - Municipality
                      - ExternalCondition
                      - RegistrationStatus
                      - PRACondition
                      - GroundCoverage
                      - NativeVegetationRemnantArea
                      - ConsolidatedRuralArea
                      - AdministrativeEasementArea
                      - LegalReserveLocation
                      - RegisteredLegalReserveArea
                      - GeoreferencedLegalReserveArea
                      - ApprovedUnregisteredLegalReserveArea
                      - ProposedLegalReserveArea
                      - TotalDeclaredLegalReserve
                      - PermanentPreservationAreas
                      - APPInConsolidatedRuralArea
                      - APPInNativeVegetationRemnantArea
                      - RestrictedUseAreas
                      - LegalReserveDeficitOrExcess
                      - LegalReserveAreaToBeRestored
                      - PermanentPreservationAreasToBeRestored
                    didUrl: 'did:web:www.example.com:inji-config:collab:landregistry'
                    contextURLs:
                      - 'https://www.w3.org/ns/credentials/v2'
                      - 'https://www.example.com/inji-config/contexts/landregistry-statement-dataIntegrity-context-automation.json'
                    signatureCryptoSuite: eddsa-rdfc-2022
                    credentialConfigKeyId: landstatement_dataIntegrity_2.0
                    metaDataDisplay:
                      - background_image:
                          uri: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                        background_color: '#ebfaff'
                        name: land statement for data integrity
                        logo:
                          alt_text: land statement Logo
                          url: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                        text_color: '#000000'
                        locale: en
                    credentialFormat: ldp_vc
                    scope: land_statement_vc_ldp
                    keyManagerAppId: CERTIFY_VC_SIGN_ED25519
                    credentialTypes:
                      - VerifiableCredential
                      - landstatement_dataIntegrity
                    signatureAlgo: EdDSA
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
    delete:
      tags:
        - Credential Configuration
      summary: Delete credential configuration
      description: Deletes a credential configuration by its ID. Returns an error if the configuration does not exist.
      operationId: deleteCredentialConfigurationById
      parameters:
        - name: configurationId
          description: Unique key identifier for the credential configuration
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /system-info/uploadCertificate:
    post:
      tags:
        - System Information
      summary: Upload signature certificate
      description: 'This endpoint allows clients to upload a signed certificate to the system. The client must provide the certificate details in the request body, wrapped in a request object. Upon receiving a valid request, the service processes the certificate upload using the key manager service and returns the result in a response object, including the response time. If the upload fails due to validation errors or other issues, the endpoint responds with a relevant error message'
      operationId: uploadSignedCertificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWrapperUploadCertificateRequestDto'
            examples:
              Example 1:
                value:
                  id: req-12345
                  version: '1.0'
                  requesttime: '2025-08-07T10:49:54.980Z'
                  metadata:
                    source: web-portal
                    ip: 192.168.1.10
                  request:
                    applicationId: APP001
                    referenceId: REF20250807
                    certificateData: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAn...
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapperUploadCertificateResponseDto'
              examples:
                Example 1:
                  value:
                    responseTime: '2025-08-14T04:36:23.066Z'
                    response:
                      status: Upload Success
                      timestamp:
                        - 2025
                        - 8
                        - 14
                        - 4
                        - 36
                        - 23
                        - 54873000
                    errors: []
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /system-info/generate-csr:
    post:
      tags:
        - System Information
      summary: Generate Certificate Signing Request (CSR)
      description: 'This endpoint allows clients to generate a certificate signing request (CSR) for a particular appId and refId. The generated CSR can be used to request a signed certificate from a Certificate Authority (CA). The client must provide the necessary details in the request body, wrapped in a request object. Upon receiving a valid request, the service generates the CSR and returns it in a response object, including the response time. If the generation fails due to validation errors or other issues, the endpoint responds with a relevant error message. The certificate signed using the CSR can be uploaded using the /system-info/uploadCertificate endpoint.'
      operationId: generateCSR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWrapperCSRGenerateRequestDto'
            examples:
              Example 1:
                value:
                  id: req-12345
                  version: '1.0'
                  requesttime: '2025-08-07T10:49:54.980Z'
                  metadata:
                    source: web-portal
                    ip: 192.168.1.10
                  request:
                    applicationId: APP001
                    referenceId: REF20250807
                    commonName: CERT-AUTH
                    organization: CERT AUTH ORG
                    organizationalUnit: IT
                    country: US
                    state: California
                    location: Bangalore
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto'
              examples:
                Example 1:
                  value:
                    responseTime: '2025-08-14T04:36:23.066Z'
                    response:
                      certificate: null
                      certSignRequest: "-----BEGIN CERTIFICATE REQUEST-----\nMIIBVzCBuAIBADA..."
                      issuedAt: '2025-08-07T10:49:54.980Z'
                      expiryAt: '2026-08-07T10:49:54.980Z'
                      timestamp: '2025-08-07T10:49:54.980Z'
                    errors: [ ]
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /issuance/vd12/credential:
    post:
      tags:
        - VC Issuance
      summary: Credential Issuance (as per OpenID VCI Draft 12 specification)
      description: The endpoint specifically handles requests and responses according to the vd12 draft version of the credential format. It ensures compatibility with the OpenID VCI draft 12 specification and returns the credential in the requested format.
      operationId: getCredentialV12Draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
            examples:
              ldp_vc example:
                value:
                  format: ldp_vc
                  credential_definition:
                    type:
                      - VerifiableCredential
                      - MockVerifiableCredential
                    '@context':
                      - 'https://www.w3.org/2018/credentials/v1'
                  proof:
                    proof_type: jwt
                    jwt: eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dC
              vc+sd-jwt example:
                value:
                  format: vc+sd-jwt
                  vct: MockVerifiableCredential_SD_JWT
                  proof:
                    proof_type: jwt
                    jwt: eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3d....
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResponse'
              examples:
                Example 1:
                  value:
                    credential:
                      credentialSubject:
                        VID: 2154189532
                        gender:
                          - language: eng
                            value: Male
                        province:
                          - language: eng
                            value: ABC City
                        phone: '+3725478456'
                        postalCode: 10106
                        fullName:
                          - language: eng
                            value: Gorge Cooper
                        dateOfBirth: 1985/04/29
                        id: 'did:jwk:eyJrdHkiOiJSU0EiLCJlIjoiQVFBQiIsInVzZSI6InNpZyIsImtpZCI6IndzbXVFM1EyaHUzT3hvRlhrRHFWaXdqMUFWeTZUQ2x0M1ZTZm9GcXZySE0iLCJhbGciOiJSUzI1NiIsIm4iOiJwTE9obUEyenBraHZlM0RDVlo4LU9kSDNZZlF3NEVmLXpWMTBqREt0SlFranlycS0yVzRadnFVYjdXSm9ZbV9jb3FPczEwMllsalE2UGpJMXJfU2haeldDZGFHT24ydFU2TGUxeEdNTlVaRXRRVmhINWpCV2Y0VTZKUDAxM1Q0bE5MOGZ0Wm1BRy1ZZGU4MW1rb0Nabm51RXdyQ0lyTWpLNWxodHJfSnpfbm9oSnMwUENaVFI2enJTWk44SVpuTldXQVZ2TmRIbHZKTEJMU0FZZXp0MHF3RlgzZkw1UXFKTm53c09YckNjVi1CNTR6VmxtT1ZiOG05d1hOODJGdkFZQUxiWFB2UGtuZ3JzVUhUdzlOMmlFR3VZU1JNbE1WLVFJSEtEMUdiTVNBWFNRbjlQaEctY2UtXzlWR2NwMkZkeHpWVTJFY1hqdXVPTWlHbmtGa3NBcVEifQ=='
                        UIN: 2154189532
                        region:
                          - language: eng
                            value: ABC Region
                        email: gorgecooper@gmail.com
                      validUntil: '2027-08-07T11:57:39.350Z'
                      validFrom: '2025-08-07T11:57:39.349Z'
                      type:
                        - VerifiableCredential
                        - MockVerifiableCredential
                      '@context':
                        - 'https://www.w3.org/ns/credentials/v2'
                        - 'https://www.example.com/.well-known/mosip-ida-context.json'
                        - 'https://w3id.org/security/suites/ed25519-2020/v1'
                      issuer: 'did:web:www.example.com:inji-config:collab:mock-identity'
                      credentialStatus:
                        statusPurpose: revocation
                        statusListIndex: '5'
                        id: 'https://www.example.com/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067#5'
                        type: BitstringStatusListEntry
                        statusListCredential: 'https://www.example.com/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067'
                      proof:
                        type: EcdsaSecp256r1Signature2019
                        created: '2025-08-07T11:57:39Z'
                        proofPurpose: assertionMethod
                        verificationMethod: 'did:web:www.example.com:inji-config:collab:mock-identity#b-yFcX3lbDH96eQUmUYHTYK5y5VE0ymJxmu-1CgM_AY'
                        proofValue: z4qiRPtXgfE14sbZ6UogFbwMjiXKnviLBkbb2RinZyvub3wZHQVVhigiynuKuKSZCBpbeLckHrtxK4QCrzPPQXyWH
                Example 2:
                  value:
                    credential: eyJ4NXQjUzI1NiI6InAxRkps....
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VCError'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /issuance/vd11/credential:
    post:
      tags:
        - VC Issuance
      summary: Credential Issuance (as per OpenID VCI Draft 11 specification)
      description: The endpoint specifically handles requests and responses according to the vd11 draft version of the credential format. It ensures compatibility with the OpenID VCI draft 11 specification and returns the credential in the requested format.
      operationId: getCredentialV11Draft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
            examples:
              Example 1:
                value:
                  format: vc+sd-jwt
                  vct: MockVerifiableCredential_SD_JWT
                  proof:
                    proof_type: jwt
                    jwt: eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3d....
              Example 2:
                value:
                  format: ldp_vc
                  credential_definition:
                    type:
                      - VerifiableCredential
                      - MockVerifiableCredential
                    '@context':
                      - 'https://www.w3.org/2018/credentials/v1'
                  proof:
                    proof_type: jwt
                    jwt: eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResponse'
              examples:
                Example 1:
                  value:
                    credential: eyJ4NXQjUzI1NiI6InAxRkp......
                Example 2:
                  value:
                    credential:
                      credentialSubject:
                        VID: 2154189532
                        gender:
                          - language: eng
                            value: Male
                        province:
                          - language: eng
                            value: ABC City
                        phone: '+3725478456'
                        postalCode: 10106
                        fullName:
                          - language: eng
                            value: Gorge Cooper
                        dateOfBirth: 1985/04/29
                        id: 'did:jwk:eyJrdHkiOiJSU0EiLCJlIjoiQVFBQiIsInVzZSI6InNpZyIsImtpZCI6IndzbXVFM1EyaHUzT3hvRlhrRHFWaXdqMUFWeTZUQ2x0M1ZTZm9GcXZySE0iLCJhbGciOiJSUzI1NiIsIm4iOiJwTE9obUEyenBraHZlM0RDVlo4LU9kSDNZZlF3NEVmLXpWMTBqREt0SlFranlycS0yVzRadnFVYjdXSm9ZbV9jb3FPczEwMllsalE2UGpJMXJfU2haeldDZGFHT24ydFU2TGUxeEdNTlVaRXRRVmhINWpCV2Y0VTZKUDAxM1Q0bE5MOGZ0Wm1BRy1ZZGU4MW1rb0Nabm51RXdyQ0lyTWpLNWxodHJfSnpfbm9oSnMwUENaVFI2enJTWk44SVpuTldXQVZ2TmRIbHZKTEJMU0FZZXp0MHF3RlgzZkw1UXFKTm53c09YckNjVi1CNTR6VmxtT1ZiOG05d1hOODJGdkFZQUxiWFB2UGtuZ3JzVUhUdzlOMmlFR3VZU1JNbE1WLVFJSEtEMUdiTVNBWFNRbjlQaEctY2UtXzlWR2NwMkZkeHpWVTJFY1hqdXVPTWlHbmtGa3NBcVEifQ=='
                        UIN: 2154189532
                        region:
                          - language: eng
                            value: ABC Region
                        email: gorgecooper@gmail.com
                      validUntil: '2027-08-07T11:57:39.350Z'
                      validFrom: '2025-08-07T11:57:39.349Z'
                      type:
                        - VerifiableCredential
                        - MockVerifiableCredential
                      '@context':
                        - 'https://www.w3.org/ns/credentials/v2'
                        - 'https://www.example.com/.well-known/mosip-ida-context.json'
                        - 'https://w3id.org/security/suites/ed25519-2020/v1'
                      issuer: 'did:web:www.example.com:inji-config:collab:mock-identity'
                      credentialStatus:
                        statusPurpose: revocation
                        statusListIndex: '5'
                        id: 'https://www.example.com/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067#5'
                        type: BitstringStatusListEntry
                        statusListCredential: 'https://www.example.com/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067'
                      proof:
                        type: EcdsaSecp256r1Signature2019
                        created: '2025-08-07T11:57:39Z'
                        proofPurpose: assertionMethod
                        verificationMethod: 'did:web:www.example.com:inji-config:collab:mock-identity#b-yFcX3lbDH96eQUmUYHTYK5y5VE0ymJxmu-1CgM_AY'
                        proofValue: z4qiRPtXgfE14sbZ6UogFbwMjiXKnviLBkbb2RinZyvub3wZHQVVhigiynuKuKSZCBpbeLckHrtxK4QCrzPPQXyWH
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VCError'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /issuance/credential:
    post:
      tags:
        - VC Issuance
      summary: Credential Issuance (as per OpenID VCI Draft 13 specification)
      description: The endpoint specifically handles requests and responses according to the draft version of the credential format. It ensures compatibility with the OpenID VCI draft 13 specification and returns the credential in the requested format.
      operationId: getCredential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRequest'
            examples:
              Example 1:
                value:
                  format: ldp_vc
                  credential_definition:
                    type:
                      - VerifiableCredential
                      - MockVerifiableCredential
                    '@context':
                      - 'https://www.w3.org/2018/credentials/v1'
                  proof:
                    proof_type: jwt
                    jwt: eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dC
              Example 2:
                value:
                  format: vc+sd-jwt
                  vct: MockVerifiableCredential_SD_JWT
                  proof:
                    proof_type: jwt
                    jwt: eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3d....
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialResponse'
              examples:
                Example 1:
                  value:
                    credential:
                      credentialSubject:
                        VID: 2154189532
                        gender:
                          - language: eng
                            value: Male
                        province:
                          - language: eng
                            value: ABC City
                        phone: '+3725478456'
                        postalCode: 10106
                        fullName:
                          - language: eng
                            value: Gorge Cooper
                        dateOfBirth: 1985/04/29
                        id: 'did:jwk:eyJrdHkiOiJSU0EiLCJlIjoiQVFBQiIsInVzZSI6InNpZyIsImtpZCI6IndzbXVFM1EyaHUzT3hvRlhrRHFWaXdqMUFWeTZUQ2x0M1ZTZm9GcXZySE0iLCJhbGciOiJSUzI1NiIsIm4iOiJwTE9obUEyenBraHZlM0RDVlo4LU9kSDNZZlF3NEVmLXpWMTBqREt0SlFranlycS0yVzRadnFVYjdXSm9ZbV9jb3FPczEwMllsalE2UGpJMXJfU2haeldDZGFHT24ydFU2TGUxeEdNTlVaRXRRVmhINWpCV2Y0VTZKUDAxM1Q0bE5MOGZ0Wm1BRy1ZZGU4MW1rb0Nabm51RXdyQ0lyTWpLNWxodHJfSnpfbm9oSnMwUENaVFI2enJTWk44SVpuTldXQVZ2TmRIbHZKTEJMU0FZZXp0MHF3RlgzZkw1UXFKTm53c09YckNjVi1CNTR6VmxtT1ZiOG05d1hOODJGdkFZQUxiWFB2UGtuZ3JzVUhUdzlOMmlFR3VZU1JNbE1WLVFJSEtEMUdiTVNBWFNRbjlQaEctY2UtXzlWR2NwMkZkeHpWVTJFY1hqdXVPTWlHbmtGa3NBcVEifQ=='
                        UIN: 2154189532
                        region:
                          - language: eng
                            value: ABC Region
                        email: gorgecooper@gmail.com
                      validUntil: '2027-08-07T11:57:39.350Z'
                      validFrom: '2025-08-07T11:57:39.349Z'
                      type:
                        - VerifiableCredential
                        - MockVerifiableCredential
                      '@context':
                        - 'https://www.w3.org/ns/credentials/v2'
                        - 'https://www.example.com/.well-known/mosip-ida-context.json'
                        - 'https://w3id.org/security/suites/ed25519-2020/v1'
                      issuer: 'did:web:www.example.com:inji-config:collab:mock-identity'
                      credentialStatus:
                        statusPurpose: revocation
                        statusListIndex: '5'
                        id: 'https://www.example.com/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067#5'
                        type: BitstringStatusListEntry
                        statusListCredential: 'https://www.example.com/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067'
                      proof:
                        type: EcdsaSecp256r1Signature2019
                        created: '2025-08-07T11:57:39Z'
                        proofPurpose: assertionMethod
                        verificationMethod: 'did:web:www.example.com:inji-config:collab:mock-identity#b-yFcX3lbDH96eQUmUYHTYK5y5VE0ymJxmu-1CgM_AY'
                        proofValue: z4qiRPtXgfE14sbZ6UogFbwMjiXKnviLBkbb2RinZyvub3wZHQVVhigiynuKuKSZCBpbeLckHrtxK4QCrzPPQXyWH
                Example 2:
                  value:
                    credential: eyJ4NXQjUzI1NiI6InAxRkp......
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VCError'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /credential-configurations:
    post:
      tags:
        - Credential Configuration
      summary: Add credential configuration
      description: |-
        Creates a new credential configuration. Requires a valid request body as per schema and has some additional validations too based on credential format and plugin configuration.

        **Note** : Incase of VCIssuance plugin mode, only `ldp_vc` and `mso_mdoc` formats are supported by credential-configuration endpoints. `vc+sd-jwt` format is not yet supported currently.
      operationId: addCredentialConfiguration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialConfigurationDTO'
            examples:
              ldp_vc example:
                value:
                  vcTemplate: eyJjcmVkZW50aWFsU3ViamVjdCI6eyJSZWdpc3RyYXRpb25EYXRlIjoiJHtyZWdpc3RyYXRpb25fZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0UHJvY2Vzc2luZ0RhdGUiOiIke2NvbnNlcnZhdGlvbl91bml0X3Byb2Nlc3NpbmdfZGF0ZX0iLCJMYXRpdHVkZSI6IiR7bGF0aXR1ZGV9IiwiQ29uc29saWRhdGVkUnVyYWxBcmVhIjoiJHtjb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJMZWdhbFJlc2VydmVMb2NhdGlvbiI6IiR7bG9jYXRpb25fb2ZfbGVnYWxfcmVzZXJ2ZX0iLCJSZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7cmVnaXN0ZXJlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiUmVzdHJpY3RlZFVzZUFyZWFUb0JlUmVzdG9yZWQiOiIke3Jlc3RyaWN0ZWRfdXNlX2FyZWFfdG9fcmVjb21wb3NlfSIsIlRvdGFsRGVjbGFyZWRMZWdhbFJlc2VydmUiOiIke3RvdGFsX2xlZ2FsX3Jlc2VydmVfZGVjbGFyZWR9IiwiUGVybWFuZW50UHJlc2VydmF0aW9uQXJlYXMiOiIke3Blcm1hbmVudF9wcmVzZXJ2YXRpb25fYXJlYXNfYXBwfSIsIkFkbWluaXN0cmF0aXZlRWFzZW1lbnRBcmVhIjoiJHthZG1pbmlzdHJhdGl2ZV9lYXNlbWVudF9hcmVhfSIsIlJlc3RyaWN0ZWRVc2VBcmVhcyI6IiR7cmVzdHJpY3RlZF91c2VfYXJlYXN9IiwiUFJBQ29uZGl0aW9uIjoiJHtwcmFfY29uZGl0aW9ufSIsImlkIjoiJHtfaG9sZGVySWR9IiwiTGVnYWxSZXNlcnZlRGVmaWNpdE9yRXhjZXNzIjoiJHtsZWdhbF9yZXNlcnZlX2RlZmljaXRfZXhjZXNzfSIsIkxlZ2FsUmVzZXJ2ZUFyZWFUb0JlUmVzdG9yZWQiOiIke2xlZ2FsX3Jlc2VydmVfYXJlYV90b19yZWNvbXBvc2V9IiwiRW1iYXJnZ2VkQXJlYU92ZXJsYXBQZXJjZW50YWdlIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwX3BlcmNlbnRhZ2V9IiwiRW1iYXJnZ2VkQXJlYURlc2NyaXB0aW9uIjoiJHtlbWJhcmdvZWRfYXJlYV9kZXNjcmlwdGlvbn0iLCJHZW9yZWZlcmVuY2VkTGVnYWxSZXNlcnZlQXJlYSI6IiR7Z2VvcmVmZXJlbmNlZF9sZWdhbF9yZXNlcnZlX2FyZWF9IiwiQVBQSW5Db25zb2xpZGF0ZWRSdXJhbEFyZWEiOiIke2FwcF9pbl9jb25zb2xpZGF0ZWRfcnVyYWxfYXJlYX0iLCJFbWJhcmdnZWRBcmVhUHJvY2Vzc2luZ0RhdGUiOiIke2VtYmFyZ29lZF9hcmVhX3Byb2Nlc3NpbmdfZGF0ZX0iLCJDb25zZXJ2YXRpb25Vbml0RGVzY3JpcHRpb24iOiIke2NvbnNlcnZhdGlvbl91bml0X2Rlc2NyaXB0aW9ufSIsIk11bmljaXBhbGl0eSI6IiR7bXVuaWNpcGFsaXR5fSIsIkVtYmFyZ2dlZEFyZWFPdmVybGFwIjoiJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwfSIsIkFwcHJvdmVkVW5yZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6IiR7YXBwcm92ZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhX25vdF9yZWdpc3RlcmVkfSIsIlJlZ2lzdHJhdGlvblN0YXR1cyI6IiR7cmVnaXN0cmF0aW9uX3N0YXR1c30iLCJOdW1iZXJPZkNBUiI6IiR7Y2FyX3JlZ2lzdHJhdGlvbl9udW1iZXJ9IiwiUnVyYWxQcm9wZXJ0eUFyZWEiOiIke3J1cmFsX3Byb3BlcnR5X2FyZWF9IiwiTG9uZ2l0dWRlIjoiJHtsb25naXR1ZGV9IiwiQ29uc2VydmF0aW9uVW5pdE92ZXJsYXBBcmVhIjoiJHtjb25zZXJ2YXRpb25fdW5pdF9vdmVybGFwX2FyZWF9IiwiRXh0ZXJuYWxDb25kaXRpb24iOiIke2V4dGVybmFsX2NvbmRpdGlvbn0iLCJMYXN0TW9kaWZpY2F0aW9uRGF0ZSI6IiR7ZGF0ZV9vZl9sYXN0X2FtZW5kbWVudH0iLCJDb25zZXJ2YXRpb25Vbml0T3ZlcmxhcFBlcmNlbnRhZ2UiOiIke2NvbnNlcnZhdGlvbl91bml0X292ZXJsYXBfcGVyY2VudGFnZX0iLCJOYXRpdmVWZWdldGF0aW9uUmVtbmFudEFyZWEiOiIke25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJBUFBJbk5hdGl2ZVZlZ2V0YXRpb25SZW1uYW50QXJlYSI6IiR7YXBwX2luX25hdGl2ZV92ZWdldGF0aW9uX3JlbW5hbnRfYXJlYX0iLCJQZXJtYW5lbnRQcmVzZXJ2YXRpb25BcmVhc1RvQmVSZXN0b3JlZCI6IiR7cGVybWFuZW50X3ByZXNlcnZhdGlvbl9hcmVhc190b19yZWNvbXBvc2V9IiwiR3JvdW5kQ292ZXJhZ2UiOiIke2xhbmRfY292ZXJ9IiwiUHJvcG9zZWRMZWdhbFJlc2VydmVBcmVhIjoiJHtwcm9wb3NlZF9sZWdhbF9yZXNlcnZlX2FyZWF9In0sInZhbGlkVW50aWwiOiIke3ZhbGlkVW50aWx9IiwidmFsaWRGcm9tIjoiJHt2YWxpZEZyb219IiwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsImxhbmRzdGF0ZW1lbnRfZGF0YUludGVncml0eSJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvbnMvY3JlZGVudGlhbHMvdjIiLCJodHRwczovL21vc2lwLmdpdGh1Yi5pby9pbmppLWNvbmZpZy9jb250ZXh0cy9sYW5kcmVnaXN0cnktc3RhdGVtZW50LWRhdGFJbnRlZ3JpdHktY29udGV4dC1hdXRvbWF0aW9uLmpzb24iXSwiaXNzdWVyIjoiJHtfaXNzdWVyfSJ9
                  keyManagerRefId: ED25519_SIGN
                  credentialSubjectDefinition:
                    APPInConsolidatedRuralArea:
                      display:
                        - name: APP in Consolidated Rural Area
                          locale: en
                    PermanentPreservationAreas:
                      display:
                        - name: Permanent Preservation Areas
                          locale: en
                  displayOrder:
                    - NumberOfCAR
                    - RegistrationDate
                    - LastModificationDate
                    - RuralPropertyArea
                    - Latitude
                    - Longitude
                    - Municipality
                    - ExternalCondition
                    - RegistrationStatus
                    - PRACondition
                    - GroundCoverage
                    - NativeVegetationRemnantArea
                    - ConsolidatedRuralArea
                    - AdministrativeEasementArea
                    - LegalReserveLocation
                    - RegisteredLegalReserveArea
                    - GeoreferencedLegalReserveArea
                    - ApprovedUnregisteredLegalReserveArea
                    - ProposedLegalReserveArea
                    - TotalDeclaredLegalReserve
                    - PermanentPreservationAreas
                    - APPInConsolidatedRuralArea
                    - APPInNativeVegetationRemnantArea
                    - RestrictedUseAreas
                    - LegalReserveDeficitOrExcess
                    - LegalReserveAreaToBeRestored
                    - PermanentPreservationAreasToBeRestored
                  didUrl: 'did:web:www.example.com:inji-config:collab:landregistry'
                  contextURLs:
                    - 'https://www.w3.org/ns/credentials/v2'
                    - 'https://www.example.com/inji-config/contexts/landregistry-statement-dataIntegrity-context-automation.json'
                  signatureCryptoSuite: eddsa-rdfc-2022
                  credentialConfigKeyId: landstatement_dataIntegrity_2.0
                  metaDataDisplay:
                    - background_image:
                        uri: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                      background_color: '#ebfaff'
                      name: land statement for data integrity
                      logo:
                        alt_text: land statement Logo
                        url: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                      text_color: '#000000'
                      locale: en
                  credentialFormat: ldp_vc
                  scope: land_statement_vc_ldp
                  keyManagerAppId: CERTIFY_VC_SIGN_ED25519
                  credentialTypes:
                    - VerifiableCredential
                    - landstatement_dataIntegrity
                  signatureAlgo: EdDSA
              VCIssuance plugin mso_mdoc example:
                value:
                  credentialConfigKeyId: DrivingLicenseCredential12
                  credentialFormat: mso_mdoc
                  signatureCryptoSuite: RsaSignature2018
                  metaDataDisplay:
                    - name: Mobile Driving License
                      locale: en
                      background_image:
                        uri: 'https://www.example.com/inji/mosip-logo.png'
                      logo:
                        url: 'https://www.example.com/inji/mosip-logo.png'
                        alt_text: a square logo of MOSIP
                      background_color: '#5F8A8B'
                      text_color: '#7C4616'
                  displayOrder:
                    - org.iso.18013.5.1~family_name
                    - org.iso.18013.5.1~given_name
                    - org.iso.18013.5.1~document_number
                    - org.iso.18013.5.1~issuing_country
                    - org.iso.18013.5.1~issue_date
                    - org.iso.18013.5.1~expiry_date
                    - org.iso.18013.5.1~birth_date
                  scope: sample_vc_mdoc
                  doctype: org.iso.18013.5.1.mDL
                  msoMdocClaims:
                    org.iso.18013.5.1:
                      given_name:
                        display:
                          - name: Given Name
                            locale: en
                      family_name:
                        display:
                          - name: Family Name
                            locale: en
                      issue_date:
                        display:
                          - name: Issue Date
                            locale: en
                      expiry_date:
                        display:
                          - name: Expiry Date
                            locale: en
                      birth_date:
                        display:
                          - name: Birth Date
                            locale: en
                      issuing_country:
                        display:
                          - name: Issuing Country
                            locale: en
                      document_number:
                        display:
                          - name: Document Number
                            locale: en
              vc+sd-jwt example:
                value:
                  credentialConfigKeyId: SD_JWT
                  vcTemplate: ewogICAgICAgICAiQGNvbnRleHQiOiBbCiAgICAgICAgICAgICAgICAgImh0dHBzOi8vd3d3LnczLm9yZy9ucy9jcmVkZW50aWFscy92MiIsCiAgICAgICAgICAgICAgICAgImh0dHBzOi8vbW9zaXAuZ2l0aHViLmlvL2luamktY29uZmlnL2NvbnRleHRzL2xhbmRyZWdpc3RyeS1zdGF0ZW1lbnQtY29udGV4dC5qc29uIiwKICAgICAgICAgICAgICAgICAiaHR0cHM6Ly93M2lkLm9yZy9zZWN1cml0eS9zdWl0ZXMvZWQyNTUxOS0yMDIwL3YxIgogICAgICAgICBdLAogICAgICAgICAiaXNzdWVyIjogIiR7X2lzc3Vlcn0iLAogICAgICAgICAidHlwZSI6IFsKICAgICAgICAgICAgICJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsCiAgICAgICAgICAgICAiTGFuZFN0YXRlbWVudENyZWRlbnRpYWwiCiAgICAgICAgIF0sCiAgICAgICAgICJ2YWxpZEZyb20iOiAiJHt2YWxpZEZyb219IiwKICAgICAgICAgInZhbGlkVW50aWwiOiAiJHt2YWxpZFVudGlsfSIsCiAgICAgICAgICJjcmVkZW50aWFsU3ViamVjdCI6IHsKICAgICAgICAgICAgImlkIjogIiR7X2hvbGRlcklkfSIsCiAgICAgICAgICAgICJOdW1iZXJPZkNBUiI6ICIke2Nhcl9yZWdpc3RyYXRpb25fbnVtYmVyfSIsCiAgICAgICAgICAgICJSZWdpc3RyYXRpb25EYXRlIjogIiR7cmVnaXN0cmF0aW9uX2RhdGV9IiwKICAgICAgICAgICAgIkxhc3RNb2RpZmljYXRpb25EYXRlIjogIiR7ZGF0ZV9vZl9sYXN0X2FtZW5kbWVudH0iLAogICAgICAgICAgICAiUnVyYWxQcm9wZXJ0eUFyZWEiOiAke3J1cmFsX3Byb3BlcnR5X2FyZWF9LAogICAgICAgICAgICAiTGF0aXR1ZGUiOiAiJHtsYXRpdHVkZX0iLAogICAgICAgICAgICAiTG9uZ2l0dWRlIjogIiR7bG9uZ2l0dWRlfSIsCiAgICAgICAgICAgICJNdW5pY2lwYWxpdHkiOiAiJHttdW5pY2lwYWxpdHl9IiwKICAgICAgICAgICAgIkV4dGVybmFsQ29uZGl0aW9uIjogIiR7ZXh0ZXJuYWxfY29uZGl0aW9ufSIsCiAgICAgICAgICAgICJSZWdpc3RyYXRpb25TdGF0dXMiOiAiJHtyZWdpc3RyYXRpb25fc3RhdHVzfSIsCiAgICAgICAgICAgICJQUkFDb25kaXRpb24iOiAiJHtwcmFfY29uZGl0aW9ufSIsCiAgICAgICAgICAgICJHcm91bmRDb3ZlcmFnZSI6ICIke2xhbmRfY292ZXJ9IiwKICAgICAgICAgICAgIk5hdGl2ZVZlZ2V0YXRpb25SZW1uYW50QXJlYSI6ICR7bmF0aXZlX3ZlZ2V0YXRpb25fcmVtbmFudF9hcmVhfSwKICAgICAgICAgICAgIkNvbnNvbGlkYXRlZFJ1cmFsQXJlYSI6ICR7Y29uc29saWRhdGVkX3J1cmFsX2FyZWF9LAogICAgICAgICAgICAiQWRtaW5pc3RyYXRpdmVFYXNlbWVudEFyZWEiOiAke2FkbWluaXN0cmF0aXZlX2Vhc2VtZW50X2FyZWF9LAogICAgICAgICAgICAiTGVnYWxSZXNlcnZlTG9jYXRpb24iOiAiJHtsb2NhdGlvbl9vZl9sZWdhbF9yZXNlcnZlfSIsCiAgICAgICAgICAgICJSZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6ICR7cmVnaXN0ZXJlZF9sZWdhbF9yZXNlcnZlX2FyZWF9LAogICAgICAgICAgICAiR2VvcmVmZXJlbmNlZExlZ2FsUmVzZXJ2ZUFyZWEiOiAke2dlb3JlZmVyZW5jZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhfSwKICAgICAgICAgICAgIkFwcHJvdmVkVW5yZWdpc3RlcmVkTGVnYWxSZXNlcnZlQXJlYSI6ICR7YXBwcm92ZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhX25vdF9yZWdpc3RlcmVkfSwKICAgICAgICAgICAgIlByb3Bvc2VkTGVnYWxSZXNlcnZlQXJlYSI6ICR7cHJvcG9zZWRfbGVnYWxfcmVzZXJ2ZV9hcmVhfSwKICAgICAgICAgICAgIlRvdGFsRGVjbGFyZWRMZWdhbFJlc2VydmUiOiAke3RvdGFsX2xlZ2FsX3Jlc2VydmVfZGVjbGFyZWR9LAogICAgICAgICAgICAiUGVybWFuZW50UHJlc2VydmF0aW9uQXJlYXMiOiAke3Blcm1hbmVudF9wcmVzZXJ2YXRpb25fYXJlYXNfYXBwfSwKICAgICAgICAgICAgIkFQUEluQ29uc29saWRhdGVkUnVyYWxBcmVhIjogJHthcHBfaW5fY29uc29saWRhdGVkX3J1cmFsX2FyZWF9LAogICAgICAgICAgICAiQVBQSW5OYXRpdmVWZWdldGF0aW9uUmVtbmFudEFyZWEiOiAke2FwcF9pbl9uYXRpdmVfdmVnZXRhdGlvbl9yZW1uYW50X2FyZWF9LAogICAgICAgICAgICAiUmVzdHJpY3RlZFVzZUFyZWFzIjogJHtyZXN0cmljdGVkX3VzZV9hcmVhc30sCiAgICAgICAgICAgICJMZWdhbFJlc2VydmVEZWZpY2l0T3JFeGNlc3MiOiAke2xlZ2FsX3Jlc2VydmVfZGVmaWNpdF9leGNlc3N9LAogICAgICAgICAgICAiTGVnYWxSZXNlcnZlQXJlYVRvQmVSZXN0b3JlZCI6ICR7bGVnYWxfcmVzZXJ2ZV9hcmVhX3RvX3JlY29tcG9zZX0sCiAgICAgICAgICAgICJQZXJtYW5lbnRQcmVzZXJ2YXRpb25BcmVhc1RvQmVSZXN0b3JlZCI6ICR7cGVybWFuZW50X3ByZXNlcnZhdGlvbl9hcmVhc190b19yZWNvbXBvc2V9LAogICAgICAgICAgICAiUmVzdHJpY3RlZFVzZUFyZWFUb0JlUmVzdG9yZWQiOiAke3Jlc3RyaWN0ZWRfdXNlX2FyZWFfdG9fcmVjb21wb3NlfSwKICAgICAgICAgICAgIkVtYmFyZ2dlZEFyZWFEZXNjcmlwdGlvbiI6ICIke2VtYmFyZ29lZF9hcmVhX2Rlc2NyaXB0aW9ufSIsCiAgICAgICAgICAgICJFbWJhcmdnZWRBcmVhUHJvY2Vzc2luZ0RhdGUiOiAiJHtlbWJhcmdvZWRfYXJlYV9wcm9jZXNzaW5nX2RhdGV9IiwKICAgICAgICAgICAgIkVtYmFyZ2dlZEFyZWFPdmVybGFwIjogJHtlbWJhcmdvZWRfYXJlYV9vdmVybGFwfSwKICAgICAgICAgICAgIkVtYmFyZ2dlZEFyZWFPdmVybGFwUGVyY2VudGFnZSI6ICR7ZW1iYXJnb2VkX2FyZWFfb3ZlcmxhcF9wZXJjZW50YWdlfSwKICAgICAgICAgICAgIkNvbnNlcnZhdGlvblVuaXREZXNjcmlwdGlvbiI6ICIke2NvbnNlcnZhdGlvbl91bml0X2Rlc2NyaXB0aW9ufSIsCiAgICAgICAgICAgICJDb25zZXJ2YXRpb25Vbml0UHJvY2Vzc2luZ0RhdGUiOiAiJHtjb25zZXJ2YXRpb25fdW5pdF9wcm9jZXNzaW5nX2RhdGV9IiwKICAgICAgICAgICAgIkNvbnNlcnZhdGlvblVuaXRPdmVybGFwQXJlYSI6ICR7Y29uc2VydmF0aW9uX3VuaXRfb3ZlcmxhcF9hcmVhfSwKICAgICAgICAgICAgIkNvbnNlcnZhdGlvblVuaXRPdmVybGFwUGVyY2VudGFnZSI6ICR7Y29uc2VydmF0aW9uX3VuaXRfb3ZlcmxhcF9wZXJjZW50YWdlfQogICAgICAgICB9CiAgICAgfQ==
                  keyManagerAppId: CERTIFY_VC_SIGN_ED25519
                  keyManagerRefId: ED25519_SIGN
                  signatureAlgo: EdDSA
                  sdJwtVct: SD_JWT
                  credentialFormat: vc+sd-jwt
                  didUrl: 'did:web:likhitharl.github.io:vc:qainji#key-0'
                  metaDataDisplay:
                    - name: STATEMENT OF THE STATUS OF INFORMATION DECLARED IN CAR
                      locale: en
                      logo:
                        url: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                        alt_text: CAR logo
                      background_image:
                        uri: 'https://www.example.com/inji-config/logos/agro-vertias-logo.png'
                      background_color: '#ebfaff'
                      text_color: '#000000'
                  displayOrder:
                    - NumberOfCAR
                    - RegistrationDate
                    - LastModificationDate
                    - RuralPropertyArea
                    - Latitude
                    - Longitude
                    - Municipality
                    - ExternalCondition
                    - RegistrationStatus
                    - PRACondition
                    - GroundCoverage
                    - NativeVegetationRemnantArea
                    - ConsolidatedRuralArea
                    - AdministrativeEasementArea
                    - LegalReserveLocation
                    - RegisteredLegalReserveArea
                    - GeoreferencedLegalReserveArea
                    - ApprovedUnregisteredLegalReserveArea
                    - ProposedLegalReserveArea
                    - TotalDeclaredLegalReserve
                    - PermanentPreservationAreas
                    - APPInConsolidatedRuralArea
                    - APPInNativeVegetationRemnantArea
                    - RestrictedUseAreas
                    - LegalReserveDeficitOrExcess
                    - LegalReserveAreaToBeRestored
                    - PermanentPreservationAreasToBeRestored
                    - RestrictedUseAreaToBeRestored
                    - EmbarggedAreaDescription
                    - EmbarggedAreaProcessingDate
                    - EmbarggedAreaOverlap
                    - EmbarggedAreaOverlapPercentage
                    - ConservationUnitDescription
                    - ConservationUnitProcessingDate
                    - ConservationUnitOverlapArea
                    - ConservationUnitOverlapPercentage
                  scope: land_statement_vc_ldp
                  sdClaim: $.credentialSubject.NumberOfCAR
                  sdJwtClaims:
                    NumberOfCAR:
                      display:
                        - name: CAR Registration Number
                          locale: en
                    RegistrationDate:
                      display:
                        - name: Registration Date
                          locale: en
                    LastModificationDate:
                      display:
                        - name: Last Modification Date
                          locale: en
                    RuralPropertyArea:
                      display:
                        - name: Rural Property Area
                          locale: en
                    Latitude:
                      display:
                        - name: Latitude
                          locale: en
                    Longitude:
                      display:
                        - name: Longitude
                          locale: en
                    Municipality:
                      display:
                        - name: Municipality
                          locale: en
                    ExternalCondition:
                      display:
                        - name: External Condition
                          locale: en
                    RegistrationStatus:
                      display:
                        - name: Registration Status
                          locale: en
                    PRACondition:
                      display:
                        - name: PRA Condition
                          locale: en
                    GroundCoverage:
                      display:
                        - name: Ground Coverage
                          locale: en
                    NativeVegetationRemnantArea:
                      display:
                        - name: Native Vegetation Remnant Area
                          locale: en
                    ConsolidatedRuralArea:
                      display:
                        - name: Consolidated Rural Area
                          locale: en
                    AdministrativeEasementArea:
                      display:
                        - name: Administrative Easement Area
                          locale: en
                    LegalReserveLocation:
                      display:
                        - name: Legal Reserve Location
                          locale: en
                    RegisteredLegalReserveArea:
                      display:
                        - name: Registered Legal Reserve Area
                          locale: en
                    GeoreferencedLegalReserveArea:
                      display:
                        - name: Georeferenced Legal Reserve Area
                          locale: en
                    ApprovedUnregisteredLegalReserveArea:
                      display:
                        - name: Approved Unregistered Legal Reserve Area
                          locale: en
                    ProposedLegalReserveArea:
                      display:
                        - name: Proposed Legal Reserve Area
                          locale: en
                    TotalDeclaredLegalReserve:
                      display:
                        - name: Total Declared Legal Reserve
                          locale: en
                    PermanentPreservationAreas:
                      display:
                        - name: Permanent Preservation Areas (APP)
                          locale: en
                    APPInConsolidatedRuralArea:
                      display:
                        - name: APP in Consolidated Rural Area
                          locale: en
                    APPInNativeVegetationRemnantArea:
                      display:
                        - name: APP in Native Vegetation Remnant Area
                          locale: en
                    RestrictedUseAreas:
                      display:
                        - name: Restricted Use Areas
                          locale: en
                    LegalReserveDeficitOrExcess:
                      display:
                        - name: Legal Reserve Deficit or Excess
                          locale: en
                    LegalReserveAreaToBeRestored:
                      display:
                        - name: Legal Reserve Area to Be Restored
                          locale: en
                    PermanentPreservationAreasToBeRestored:
                      display:
                        - name: Permanent Preservation Areas to Be Restored
                          locale: en
                    RestrictedUseAreaToBeRestored:
                      display:
                        - name: Restricted Use Area to Be Restored
                          locale: en
                    EmbarggedAreaDescription:
                      display:
                        - name: Embargoed Area Description
                          locale: en
                    EmbarggedAreaProcessingDate:
                      display:
                        - name: Embargoed Area Processing Date
                          locale: en
                    EmbarggedAreaOverlap:
                      display:
                        - name: Embargoed Area Overlap
                          locale: en
                    EmbarggedAreaOverlapPercentage:
                      display:
                        - name: Embargoed Area Overlap Percentage
                          locale: en
                    ConservationUnitDescription:
                      display:
                        - name: Conservation Unit Description
                          locale: en
                    ConservationUnitProcessingDate:
                      display:
                        - name: Conservation Unit Processing Date
                          locale: en
                    ConservationUnitOverlapArea:
                      display:
                        - name: Conservation Unit Overlap Area
                          locale: en
                    ConservationUnitOverlapPercentage:
                      display:
                        - name: Conservation Unit Overlap Percentage
                          locale: en
              VCIssuance plugin ldp_vc example:
                value:
                  contextURLs:
                    - 'https://www.w3.org/2018/credentials/v1'
                    - 'https://example.github.io/inji-config/contexts/insurance-context.json'
                  credentialTypes:
                    - VerifiableCredential
                    - InsuranceCredential_eccr1
                  credentialFormat: ldp_vc
                  credentialConfigKeyId: Insurance_eccr1
                  didUrl: ''
                  signatureAlgo: ''
                  signatureCryptoSuite: EcdsaSecp256r1Signature2019
                  sdClaim: ''
                  displayOrder:
                    - fullName
                    - policyName
                    - policyIssuedOn
                    - policyExpiresOn
                    - policyNumber
                    - mobile
                    - dob
                    - gender
                    - benefits
                  scope: sunbird_rc_insurance_vc_ldp
                  metaDataDisplay:
                    - name: Insurance_eccr1
                      locale: en
                      logo:
                        url: 'https://example.github.io/logos/logo.png'
                        alt_text: a square logo
                      background_color: '#EBFAFF'
                      text_color: '#000000'
                  credentialSubjectDefinition:
                    fullName:
                      display:
                        - name: Name
                          locale: en
                    mobile:
                      display:
                        - name: Phone Number
                          locale: en
                    dob:
                      display:
                        - name: Date of Birth
                          locale: en
                    gender:
                      display:
                        - name: Gender
                          locale: en
                    benefits:
                      display:
                        - name: Benefits
                          locale: en
                    email:
                      display:
                        - name: Email Id
                          locale: en
                    policyIssuedOn:
                      display:
                        - name: Policy Issued On
                          locale: en
                    policyExpiresOn:
                      display:
                        - name: Policy Expires On
                          locale: en
                    policyName:
                      display:
                        - name: Policy Name
                          locale: en
                    policyNumber:
                      display:
                        - name: Policy Number
                          locale: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialConfigResponse'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /system-info/certificate:
    get:
      tags:
        - System Information
      operationId: getCertificate
      summary: Fetch signature certificate
      description: 'This endpoint retrieves the certificate associated with a given application ID and an optional reference ID. When a client calls this endpoint with a valid application ID, the service fetches the corresponding certificate details from the key manager service. If the request is valid and the certificate exists, the endpoint returns the certificate information wrapped in a response object, along with the response time. If the request is invalid or the certificate cannot be found, an appropriate error is returned.'
      parameters:
        - name: applicationId
          description: Identifier for the application whose certificate is requested.
          in: query
          required: true
          schema:
            type: string
        - name: referenceId
          description: Optional reference for tracking or versioning the certificate.
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapperKeyPairGenerateResponseDto'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  '/rendering-template/{id}':
    get:
      tags:
        - Rendering Template
      summary: Rendering template retrieval
      description: 'The endpoint retrieves an SVG rendering template by its unique identifier. When a client calls this endpoint with a valid template ID, the service fetches the corresponding SVG template and returns it with the appropriate content type and cache headers. This enables clients to obtain up-to-date templates for rendering digital credentials or certificates, ensuring consistent and customizable visual representations. If the template is not found or an error occurs, an appropriate error response is returned.'
      operationId: serveSvgTemplate
      parameters:
        - name: id
          description: The unique identifier of the SVG rendering template to be retrieved.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /.well-known/openid-credential-issuer:
    get:
      tags:
        - Well-known
      summary: Issuer metadata
      description: 'This endpoint provides metadata about the credential issuer and the supported credential configurations. The response structure adapts based on the version query parameter, allowing clients to discover issuer capabilities and supported credential types for different OID4VCI versions. The response will be as per the applicable OID4VCI specification, for e.g. for draft 13 of OID4VCI, the specification to be referred is https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0-ID1.html#name-credential-issuer-metadata-p'
      operationId: getCredentialIssuerMetadata
      parameters:
        - name: version
          in: query
          required: false
          schema:
            type: string
            default: latest
            enum:
              - latest
              - vd11
              - vd12
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialIssuerMetadataDTO'
  /.well-known/did.json:
    get:
      tags:
        - Well-known
      summary: Issuer DID document
      description: 'This endpoint returns the DID document associated with the issuer. This document contains the decentralized identifier and related public keys, enabling clients to verify the issuer’s identity and interact securely. The response will be as per the specification provided here : https://www.w3.org/ns/did/v1'
      operationId: getDIDDocument_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /issuance/.well-known/openid-credential-issuer:
    get:
      tags:
        - VC Issuance
      summary: Issuer metadata
      description: 'This endpoint provides metadata about the credential issuer and the supported credential configurations. The response structure adapts based on the version query parameter, allowing clients to discover issuer capabilities and supported credential types for different OID4VCI versions. The response will be as per the applicable OID4VCI specification, for e.g. for draft 13 of OID4VCI, the specification to be referred is [https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0-ID1.html#name-credential-issuer-metadata-p](url)'
      operationId: getMetadata
      parameters:
        - name: version
          in: query
          required: false
          schema:
            type: string
            default: latest
            enum:
              - latest
              - vd12
              - vd11
          allowReserved: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VCError'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
      deprecated: true
  /issuance/.well-known/did.json:
    get:
      tags:
        - VC Issuance
      summary: Issuer DID document
      description: 'This endpoint returns the DID document associated with the issuer. This document contains the decentralized identifier and related public keys, enabling clients to verify the issuer’s identity and interact securely. The response will be as per the specification provided here : [https://www.w3.org/ns/did/v1](url)'
      operationId: getDIDDocument
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VCError'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
      deprecated: true
  /ledger-search:
    post:
      tags:
        - '[Experimental] Ledger Search'
      summary: Search for Credential Status Records (Ledger Search)
      description: '[EXPERIMENTAL FEATURE] Search based on credentialId, issuerId, and potentially indexedAttributes (via specific criteria) from the ledger. AND logic applied.'
      operationId: searchLedgerRecords
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialSearchCriteria'
            examples:
              Example 1:
                value:
                  credentialId: afce16e8-02ac-4210-80d9-a0a20132bda3
                  issuerId: 'did:web:sample.github.io:my-files:sample'
                  credentialType: 'FarmerCredential,VerifiableCredential'
                  indexedAttributesEquals:
                    district: Bengaluru
                    state: Karnataka
      responses:
        '200':
          description: List of matching credential status records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialStatusResponseDto'
              examples:
                Example 1:
                  value:
                    - credentialId: 52b55d02-613f-432f-b29e-ae842bc404a8
                      issuerId: 'did:web:www.example.com:inji-config:collab:mock-identity'
                      statusListCredentialUrl: 7bf52e81-f3bb-40ec-a0f9-a714847fd067
                      statusListIndex: 5
                      statusPurpose: revocation
                      issueDate: '2025-08-07T11:57:39'
                      expirationDate: null
                      credentialType: 'MockVerifiableCredential,VerifiableCredential'
                      statusTimestamp: '2025-08-07T11:57:39'
        '204':
          description: No matching records found.
        '400':
          description: Invalid search criteria provided.
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  /credentials/status:
    post:
      tags:
        - '[Experimental] Credential Status'
      summary: Update Credential Status
      description: |
        [EXPERIMENTAL FEATURE] Updates the status of an issued credential. This is the primary endpoint for changing a credential's status (e.g., revoking, suspending, activating by setting the 'status' boolean). It can potentially assign a credential to a status list index using fields within the 'credentialStatus' object. This operation is potentially complex: if a status list mechanism (like Bitstring Status List v1.0) is used, this may trigger fetching the relevant Status List VC, modifying its `encodedList`, calculating a new proof, and storing the updated Status List VC, in addition to updating the local credential status record. Requires appropriate authorization. This endpoint directly applies the status change. compliant to https://w3c-ccg.github.io/vc-api/#update-status
      operationId: updateCredentialStatus
      requestBody:
        description: 'Specifies the credential to update, the new status value, and associated status mechanism details.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCredentialStatusRequestDto'
            examples:
              Example 1:
                value:
                  credentialId: 52b55d02-613f-432f-b29e-ae842bc404a8
                  credentialStatus:
                    statusPurpose: revocation
                    statusListIndex: 5
                    id: 'http://localhost:8090/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067#5'
                    type: BitstringStatusListEntry
                    statusListCredential: 'http://localhost:8090/v1/certify/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067'
                  status: false
                  indexAllocator: test
      responses:
        '200':
          description: Credential status successfully updated. Returns the updated status record.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialStatusResponseDto'
              examples:
                Example 1:
                  value:
                    credentialId: 52b55d02-613f-432f-b29e-ae842bc404a8
                    issuerId: 'did:web:www.example.com:inji-config:collab:mock-identity'
                    statusListCredentialUrl: 7bf52e81-f3bb-40ec-a0f9-a714847fd067
                    statusListIndex: 5
                    statusPurpose: revocation
                    issueDate: '2025-08-07T11:57:39'
                    expirationDate: null
                    credentialType: 'MockVerifiableCredential,VerifiableCredential'
                    statusTimestamp: '2025-08-07T12:18:55'
        '400':
          description: 'Bad Request - Invalid input data (e.g., missing required fields, invalid format).'
        '403':
          description: Forbidden - Caller does not have permission to update the status of this credential.
        '404':
          description: Not Found - The specified credentialId or referenced statusListCredential URL does not exist in the system.
        '409':
          description: 'Conflict - The requested status update cannot be performed (e.g., index already allocated and conflict occurs, state transition not allowed).'
        '500':
          description: 'Internal Server Error - An error occurred during the status update process (e.g., failed to update Status List VC).'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
  '/credentials/status-list/{id}':
    get:
      tags:
        - '[Experimental] Credential Status'
      summary: Get Status List by ID
      description: |
        [EXPERIMENTAL FEATURE] Retrieves a specific full Status List vc JSON document by its Identifier (URL/URN/DID). This endpoint returns the raw VC content as stored.
      operationId: getStatusListById
      parameters:
        - name: id
          in: path
          description: The unique ID (URL/URN/DID) of the Status List VC.
          required: true
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: Status List Verifiable Credential found. Returns the full VC JSON document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusListCredentialDto'
              examples:
                Example 1:
                  value:
                    credentialSubject:
                      statusPurpose: revocation
                      id: 'http://localhost:8090/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067'
                      type: BitstringStatusList
                      encodedList: uH4sIAAAAAAAA_-3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA
                    id: 'http://localhost:8090/status-list/7bf52e81-f3bb-40ec-a0f9-a714847fd067'
                    validFrom: '2025-08-02T05:54:45.562Z'
                    proof:
                      proofValue: z63Thn8eVY6psbL2tRuAtSgdqQbinmaa4ZJXCAHoCB6C64MbjybPKHC1fFAomtMoEWDfjbEJZ5mf87hNJ5GWwAkwT
                      created: '2025-08-02T05:54:45Z'
                      proofPurpose: assertionMethod
                      type: Ed25519Signature2020
                      verificationMethod: 'did:web:www.example.com:inji-config:collab:mock-identity#PFms4K7R6iCxobJK1Ri9DUFzKpd6uwG2PcHn9XbxxNk'
                    type:
                      - VerifiableCredential
                      - BitstringStatusListCredential
                    '@context':
                      - 'https://www.w3.org/ns/credentials/v2'
                    issuer: 'did:web:www.example.com:inji-config:collab:mock-identity'
      servers:
        - url: 'http://localhost:8090/v1/certify'
          description: Generated server url
tags:
  - name: cryptomanager
    description: Operation related to Encryption and Decryption
  - name: Credential Configuration
    description: Operations to manage credential configuration used for credential issuance
  - name: System Information
    description: Operations to upload and fetch signature certificates
  - name: VC Issuance
    description: Verifiable credential issuance and issuer metadata APIs
  - name: Rendering Template
    description: Operations for rendering template
  - name: Well-known
    description: Well-known endpoints
  - name: '[Experimental] Credential Status'
    description: Operations for Credential Status
  - name: '[Experimental] Ledger Search'
    description: Operations for Ledger Search
components:
  schemas:
    CredentialConfigurationDTO:
      type: object
      required:
        - credentialFormat
        - metaDataDisplay
        - scope
      properties:
        vcTemplate:
          type: string
          description: Base64 encoded template identifier for the Verifiable Credential. Mandatory if mosip.certify.plugin-mode is set to ‘DataProvider’ during creation.
        credentialConfigKeyId:
          type: string
          description: Unique key identifier for the credential configuration.
        contextURLs:
          type: array
          description: 'List of JSON-LD context URIs for the credential. It should be list of valid URI strings, will be mandatory for ldp_vc credential format.'
          items:
            type: string
        credentialTypes:
          type: array
          description: 'List of credential types (e.g., VerifiableCredential,FarmerCredential) as OpenID VCI specifications. Mandatory and applicable only for ldp_vc format.'
          items:
            type: string
        sdJwtVct:
          type: string
          description: Represents the Verifiable Credential Type (VCT) used in Selective Disclosure JWT (SD-JWT) credentials. This field specifies the credential type identifier required for vc+sd-jwt format.
        credentialFormat:
          description: 'Format of the credential. Valid values are ldp_vc, mso_mdoc, vc+sd-jwt.'
          type: string
          enum:
            - ldp_vc
            - mso_mdoc
            - vc+sd-jwt
        didUrl:
          type: string
          description: URL of the Decentralized Identifier (DID) document. Mandatory for DataProvider plugin mode.
        keyManagerAppId:
          type: string
          description: Application ID for the key manager used in signing. Required for DataProvider plugin mode.
        keyManagerRefId:
          type: string
          description: Reference ID for the key manager. Applicable for DataProvider plugin mode.
        signatureAlgo:
          description: |-
            Signature or proof algorithm used for credential signing. This field is required for certain credential formats, such as vc+sd-jwt and optionally for ldp_vc when the signatureCryptoSuite is one of DataIntegrityProof suite (e.g. ecdsa-rdfc-2019, ecdsa-jcs-2019, etc). It ensures compatibility between the cryptographic suite and the signing algorithm. Mapping of signatureCryptoSuite and signatureAlgo values for DataIntegrityProof suite scenario :

            signatureCryptoSuite |  signatureAlgo
            ---------|----------
             eddsa-rdfc-2022, eddsa-jcs-2022 | EdDSA 
             ecdsa-rdfc-2019, ecdsa-jcs-2019 | ES256K,ES256 

          enum:
            - EdDSA
            - ES256K
            - ES256
          type: string
        sdClaim:
          type: string
          description: Comma-separated list for selective disclosure claim configuration. Applicable for vc+sd-jwt credential type.
        metaDataDisplay:
          type: array
          description: 'To configure the display properties (e.g., logo, name, colors, and localization) for metadata associated with the Verifiable Credential type.'
          items:
            $ref: '#/components/schemas/MetaDataDisplayDTO'
        displayOrder:
          type: array
          description: 'List specifying the order of claims or fields in the credential that are defined in credentialSubjectDefinition field, to be used while showing the credential in UI.'
          items:
            type: string
        scope:
          type: string
          description: Scope value for the credential configuration. This value is matched with the scope value in Auth Token while processing the credential issuance request.
        pluginConfigurations:
          type: array
          description: 'Holds a list of plugin-specific configuration parameters as key-value pairs. Each entry in the list represents configuration settings required by external plugins or modules integrated with the credential issuance process. This allows dynamic extension and customization of credential behavior based on the needs of different plugins, such as data providers, signature providers, or custom validation logic.'
          items:
            type: object
            additionalProperties:
              type: string
        credentialSubjectDefinition:
          type: object
          description: 'Represents the subject of the Verifiable Credential, containing the claims and attributes about the entity (such as a person, organization, or device) to whom the credential is issued. Applicable for ldp_vc credential type.'
          additionalProperties:
            $ref: '#/components/schemas/CredentialSubjectParametersDTO'
        msoMdocClaims:
          description: Claims included in the credential. Applicable for mso_mdoc and vc+sd-jwt credential formats.
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/ClaimsDisplayFieldsConfigDTO'
        sdJwtClaims:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClaimsDisplayFieldsConfigDTO'
        doctype:
          type: string
          description: Document type identifier for the credential. Mandatory for mso_mdoc credential format.
        signatureCryptoSuite:
          description: 'Holds value for signature crypto suites supported for key algorithms like Ed25519Signature2020,EcdsaSecp256k1Signature2019, etc. It will also be applicable for data integrity proof crypto suites, for e.g. ecds-rdfc-2019, eddsa-rdfc-2022, etc. Mandatory for DataProvider plugin. The values should be only be those supported by certify.'
          type: string
          enum:
            - RsaSignature2018
            - Ed25519Signature2018
            - Ed25519Signature2020
            - EcdsaKoblitzSignature2016
            - EcdsaSecp256k1Signature2019
            - EcdsaSecp256r1Signature2019
            - ecdsa-rdfc-2019
            - ecdsa-jcs-2019
            - eddsa-rdfc-2022
            - eddsa-jcs-2022
        credentialStatusPurposes:
          type: string
          description: 'List of purposes for which credential status is maintained, comma-separated values are supported here. Currently, the value for this field will be driven by following config - `mosip.certify.data-provider-plugin.credential-status.supported-purposes`. Value sent in the request will be ignored. '
    CredentialConfigResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
      required:
        - id
        - status
    RequestWrapperUploadCertificateRequestDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the request.
        version:
          type: string
          description: API version of the request. Used to indicate the version of the contract or schema being used.
        requesttime:
          type: string
          format: date-time
          description: UTC timestamp when the request was sent.
        metadata:
          type: object
          description: 'Optional field for additional request-related information or custom attributes. Can be used to pass extra data needed for processing, auditing, or tracking the request.'
        request:
          $ref: '#/components/schemas/UploadCertificateRequestDto'
      required:
        - request
    UploadCertificateRequestDto:
      type: object
      properties:
        applicationId:
          type: string
          description: Identifier for the application the certificate is for.
        referenceId:
          type: string
          description: Optional reference for tracking or versioning.
        certificateData:
          type: string
          description: The signed certificate in PEM or DER format.
      required:
        - applicationId
        - certificateData
    ResponseWrapperUploadCertificateResponseDto:
      type: object
      properties:
        responseTime:
          type: string
          description: UTC timestamp when the response was generated.
        response:
          $ref: '#/components/schemas/UploadCertificateResponseDto'
        errors:
          type: array
          description: Technical details of error generated incase of error.
          items:
            type: object
            properties:
              cause:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        className:
                          type: string
                        nativeMethod:
                          type: boolean
                  message:
                    type: string
                  localizedMessage:
                    type: string
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              suppressed:
                type: array
                items:
                  type: object
                  properties:
                    stackTrace:
                      type: array
                      items:
                        type: object
                        properties:
                          classLoaderName:
                            type: string
                          moduleName:
                            type: string
                          moduleVersion:
                            type: string
                          methodName:
                            type: string
                          fileName:
                            type: string
                          lineNumber:
                            type: integer
                            format: int32
                          className:
                            type: string
                          nativeMethod:
                            type: boolean
                    message:
                      type: string
                    localizedMessage:
                      type: string
              localizedMessage:
                type: string
    UploadCertificateResponseDto:
      type: object
      properties:
        status:
          type: string
          description: 'Status of the upload (e.g., SUCCESS, FAILURE).'
        timestamp:
          type: string
          description: UTC timestamp when upload operation was completed.
          format: date-time
    RequestWrapperCSRGenerateRequestDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the request.
        version:
          type: string
          description: API version of the request. Used to indicate the version of the contract or schema being used.
        requesttime:
          type: string
          format: date-time
          description: UTC timestamp when the request was sent.
        metadata:
          type: object
          description: 'Optional field for additional request-related information or custom attributes. Can be used to pass extra data needed for processing, auditing, or tracking the request.'
        request:
          $ref: '#/components/schemas/CSRGenerateRequestDto'
      required:
        - request
    CSRGenerateRequestDto:
      type: object
      properties:
        applicationId:
          type: string
          description: Identifier for the application the certificate is for.
        referenceId:
          type: string
          description: Optional reference for tracking or versioning.
        commonName:
          type: string
          description: Common Name (CN) for the certificate subject.
        organization:
          type: string
          description: Organization (O) for the certificate subject.
        organizationUnit:
          type: string
          description: Organizational Unit (OU) for the certificate subject.
        location:
          type: string
          description: Location (L) for the certificate subject.
        state:
          type: string
          description: State (ST) for the certificate subject.
        country:
          type: string
          description: Country (C) for the certificate subject.
      required:
        - applicationId
    CredentialRequest:
      type: object
      x-examples: {}
      required:
        - format
        - proof
      properties:
        format:
          description: Format of the Credential to be issued.
          enum:
            - ldp_vc
            - vc+sd-jwt
            - mso_mdoc
          type: string
        proof:
          $ref: '#/components/schemas/CredentialProof'
        credential_definition:
          $ref: '#/components/schemas/CredentialDefinition'
        doctype:
          type: string
          description: Type or category of the document for which the credential is being issued. Used to specify the intended document schema or classification. Applicable for `mso_mdoc` credential format.
        claims:
          type: object
          description: Claims asserted in the credential. A key-value map where each key is a claim name and the value is the corresponding claim data to be included in the issued credential. Applicable for `mso_mdoc` format.
          additionalProperties:
            type: object
        vct:
          type: string
          description: Represents the Verifiable Credential Type (VCT) used in Selective Disclosure JWT (SD-JWT) credentials. This field specifies the credential type identifier required for `vc+sd-jwt` format.
    CredentialProof:
      type: object
      properties:
        proof_type:
          type: string
          description: 'Type of proof provided (e.g., jwt, cwt).'
        jwt:
          type: string
          description: 'When proof type is jwt, a proof object MUST include a jwt claim.'
        cwt:
          type: string
          description: 'When proof type is cwt, a proof object MUST include a cwt claim.'
      required:
        - proof_type
    CredentialDefinition:
      type: object
      properties:
        type:
          type: array
          items:
            type: string
          description: List of credential type strings.
        credentialSubject:
          type: object
          additionalProperties:
            type: object
          description: Map defining the schema and fields for the credential subject.
        '@context':
          type: array
          items:
            type: string
          description: List of JSON-LD context URIs.
      required:
        - type
    CredentialResponse:
      type: object
      x-examples: {}
      required:
        - credential
      properties:
        format:
          type: string
          description: JSON string denoting the format of the issued Credential.
        credential:
          description: 'The issued credential itself. Its type is generic and may be a JSON string or object, depending on the credential format. Must be present if acceptance_token is not returned.'
          anyOf:
            - type: object
            - type: string
              x-stoplight:
                id: zc9urdivz83ao
        acceptance_token:
          type: string
          description: A JSON string containing a security token used to subsequently obtain a credential. Must be present if credential is not returned.
        c_nonce:
          type: string
          description: 'A JSON string representing a nonce value, used to create a proof of possession of key material.'
        c_nonce_expires_in:
          type: integer
          format: int32
          description: A JSON integer specifying the lifetime (in seconds) of the c_nonce.
    VCError:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
        c_nonce:
          type: string
        c_nonce_expires_in:
          type: integer
          format: int32
    ResponseWrapperKeyPairGenerateResponseDto:
      type: object
      properties:
        responseTime:
          type: string
          description: UTC timestamp when the response was generated.
        response:
          $ref: '#/components/schemas/KeyPairGenerateResponseDto'
        errors:
          type: array
          description: Technical details of error generated incase of error.
          items:
            type: object
            properties:
              cause:
                type: object
                properties:
                  stackTrace:
                    type: array
                    items:
                      type: object
                      properties:
                        classLoaderName:
                          type: string
                        moduleName:
                          type: string
                        moduleVersion:
                          type: string
                        methodName:
                          type: string
                        fileName:
                          type: string
                        lineNumber:
                          type: integer
                          format: int32
                        className:
                          type: string
                        nativeMethod:
                          type: boolean
                  message:
                    type: string
                  localizedMessage:
                    type: string
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              suppressed:
                type: array
                items:
                  type: object
                  properties:
                    stackTrace:
                      type: array
                      items:
                        type: object
                        properties:
                          classLoaderName:
                            type: string
                          moduleName:
                            type: string
                          moduleVersion:
                            type: string
                          methodName:
                            type: string
                          fileName:
                            type: string
                          lineNumber:
                            type: integer
                            format: int32
                          className:
                            type: string
                          nativeMethod:
                            type: boolean
                    message:
                      type: string
                    localizedMessage:
                      type: string
              localizedMessage:
                type: string
    KeyPairGenerateResponseDto:
      type: object
      properties:
        certificate:
          type: string
          description: X509 self-signed certificate in PEM format.
        certSignRequest:
          type: string
          description: 'Certificate Signing Request (CSR) data, typically in PEM format. May be null if not applicable.'
        issuedAt:
          type: string
          format: date-time
          description: Timestamp (UTC) when the certificate was issued.
        expiryAt:
          type: string
          format: date-time
          description: Timestamp (UTC) when the certificate will expire.
        timestamp:
          type: string
          format: date-time
          description: Timestamp (UTC) representing when the public key was generated.
    CredentialIssuerMetadataDTO:
      type: object
      properties:
        display:
          type: array
          description: 'List of localized display information (such as name, logo, and description) for the credential issuer, used for UI presentation in wallets.'
          items:
            type: object
            additionalProperties:
              type: string
        credential_issuer:
          type: string
          description: The identifier (URL or DID) of the credential issuer. Used by wallets to recognize the issuer of verifiable credentials.
        authorization_servers:
          type: array
          description: List of OAuth 2.0/OpenID Connect authorization server URLs that can be used for credential issuance authorization.
          items:
            type: string
        credential_endpoint:
          type: string
          description: The API endpoint URL where clients can request credential issuance.
        credential_configurations_supported:
          type: object
          description: Map of Verifiable Credential level configuration information.
          additionalProperties:
            $ref: '#/components/schemas/CredentialConfigurationSupportedDTO'
    CredentialConfigurationSupportedDTO:
      type: object
      properties:
        format:
          type: string
          description: 'The credential format supported (e.g., ldp_vc, mso_mdoc, vc+sd-jwt).'
        scope:
          type: string
          description: The OAuth2 scope value associated with this credential configuration.
        claims:
          type: object
          description: Map of claim definitions for the credential (used for mso_mdoc and vc+sd-jwt).
          additionalProperties:
            type: object
        display:
          type: array
          description: 'List of localized display information for the credential (name, description, logo, etc.).'
          items:
            type: object
            additionalProperties:
              type: object
        order:
          type: array
          description: List specifying the display order of claims or fields in the credential.
          items:
            type: string
        doctype:
          type: string
          description: 'Document type identifier, used for mDL/mDoc credentials.'
        cryptographic_binding_methods_supported:
          type: array
          description: 'List of supported cryptographic binding methods (e.g., did, holder\_binding).'
          items:
            type: string
        credential_signing_alg_values_supported:
          type: array
          description: 'List of supported credential signing algorithms (e.g., ES256, EdDSA).'
          items:
            type: string
        proof_types_supported:
          type: object
          description: 'Map of supported proof types and their parameters (e.g., jwt, ldp).'
          additionalProperties:
            type: object
        credential_definition:
          $ref: '#/components/schemas/CredentialDefinition'
        vct:
          type: string
    CredentialSearchCriteria:
      type: object
      description: Criteria for searching Credential Status records from the ledger. AND logic applied. Missing fields are not used for filtering. indexedAttributesEquals allows searching on data previously stored in the ledger.indexedAttributes column.
      required:
        - issuerId
        - credentialType
        - indexedAttributesEquals
      properties:
        credentialId:
          type: string
          description: Filter by credential system ID (ledger.credential_id).
          nullable: true
        issuerId:
          type: string
          description: Filter by credential issuer's ID (ledger.issuer_id).
        credentialType:
          type: string
          description: Filter by credential type (ledger.credential_type).
        indexedAttributesEquals:
          type: object
          description: Map for exact match on specific indexed attribute key-value pairs previously stored in ledger.indexed_attributes.
          additionalProperties:
            type: string
          minProperties: 1
    CredentialStatusResponseDto:
      type: object
      description: 'Representation of a Credential Status record read from the system, reflecting the ''ledger'' table structure (excluding indexedAttributes) and current status from ''credential_status'' table.'
      required:
        - credentialId
        - issuerId
        - issueDate
        - credentialType
      properties:
        credentialId:
          type: string
          description: Unique identifier of the credential whose status is being tracked (from ledger.credential_id).
        issuerId:
          type: string
          description: Identifier of the issuer of the credential being tracked (from ledger.issuer_id).
        statusListCredentialUrl:
          type: string
          description: Reference to the ID (URL/DID/URN) of the Status List VC used for this credential's current status (from credential_status.status_list_credential_id where is_current=true). Null if not linked.
          nullable: true
        statusListIndex:
          type: integer
          description: The zero-based index within the referenced Status List corresponding to this credential's current status (from credential_status.status_list_index where is_current=true). Null if not linked.
          format: int64
          nullable: true
        statusPurpose:
          type: string
          description: The purpose associated with the current status check (from credential_status.status_purpose where is_current=true).
          nullable: true
        issueDate:
          type: string
          description: Issuance date of the credential being tracked (from ledger.issue_date).
          format: date-time
        expirationDate:
          type: string
          description: 'Expiration date of the credential being tracked, if applicable (from ledger.expiration_date).'
          format: date-time
          nullable: true
        credentialType:
          type: string
          description: The type(s) of the credential being tracked (from ledger.credential_type).
        statusTimestamp:
          type: string
          description: Timestamp of when the current status became effective (from credential_status.status_timestamp where is_current=true).
          format: date-time
    UpdateCredentialStatusRequestDto:
      type: object
      properties:
        credentialId:
          type: string
          description: System identifier for the credential status record to update.
        credentialStatus:
          type: object
          description: 'Object containing details related to the credential''s status mechanism, especially if using a status list.'
          properties:
            id:
              type: string
              nullable: true
              description: 'The identifier for the credential status entry itself (e.g., https://example.com/status/1#123). Optional, system may generate/manage.'
              format: uri
            type:
              type: string
              nullable: true
              description: 'The type of the status mechanism being used (e.g., BitstringStatusList). Optional, may be inferred or managed by system.'
            statusPurpose:
              type: string
              nullable: true
              description: 'Indicates the purpose of the status (e.g., ''revocation'', ''suspension''). Determines interpretation of the ''status'' bit. Should align with system policy/list purpose.'
            statusListIndex:
              type: integer
              nullable: true
              description: The index assigned to this credential within the referenced status list. Required if using StatusList.
              format: int64
            statusListCredential:
              type: string
              nullable: true
              description: The URL/ID of the Status List VC document to use. Required if using StatusList.
              format: uri
        status:
          type: boolean
          description: 'The new status value (true typically means ''status asserted'', e.g., revoked/suspended; false means ''status not asserted''). Interpretation depends on statusPurpose and system policy.'
        indexAllocator:
          type: string
          nullable: true
          description: Optional hint or identifier for index allocation strategy or service component. Usage is implementation-defined.
      required:
        - credentialId
        - credentialStatus
        - status
    StatusListCredentialDto:
      type: object
      description: |
        Representation of a Status List Verifiable Credential (JSON-LD format), typically conforming to BitstringStatusListCredential or similar specs. This schema reflects the standard VC structure, not system-specific metadata added in the database.
      additionalProperties: false
      required:
        - '@context'
        - id
        - type
        - issuer
        - validFrom
        - credentialSubject
      properties:
        '@context':
          description: JSON-LD context.
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        id:
          type: string
          description: Unique ID of the Status List VC.
          format: uri
        type:
          type: array
          description: 'VC Type(s), e.g., [''VerifiableCredential'', ''BitstringStatusListCredential''].'
          items:
            type: string
        issuer:
          description: Issuer of the Status List VC.
          oneOf:
            - type: string
              format: uri
            - type: object
              required:
                - id
              properties:
                id:
                  type: string
                  format: uri
        validFrom:
          type: string
          description: Timestamp from which the status list is valid.
          format: date-time
        validUntil:
          type: string
          description: Optional timestamp until which the status list is valid.
          format: date-time
          nullable: true
        credentialSubject:
          type: object
          description: The subject containing the actual status list data.
          additionalProperties: false
          required:
            - id
            - type
            - encodedList
          properties:
            id:
              type: string
              description: 'Subject ID, often relates to the list''s purpose or identity.'
              format: uri
            type:
              type: string
              description: 'Type of the subject, e.g., ''BitstringStatusList''.'
            statusPurpose:
              type: string
              description: 'Default purpose if not specified elsewhere (e.g., ''revocation''). Optional depending on spec.'
              nullable: true
            encodedList:
              type: string
              description: 'The compressed status list, typically base64url encoded.'
        proof:
          type: object
          description: Cryptographic proof ensuring the integrity and authenticity of the Status List VC.
          additionalProperties: false
          nullable: true
          properties:
            type:
              type: string
              description: 'Type of the proof (e.g., Ed25519Signature2020).'
            created:
              type: string
              description: Timestamp of proof creation.
              format: date-time
            verificationMethod:
              type: string
              description: Identifier of the key used for the proof.
              format: uri
            proofPurpose:
              type: string
              description: 'Purpose of the proof (e.g., assertionMethod).'
            proofValue:
              type: string
              description: 'The proof value (e.g., signature), often base58btc or similar encoding.'
    ClaimsDisplayFieldsConfigDTO:
      title: ClaimsDisplayFieldsConfigDTO
      type: object
      properties:
        display:
          type: array
          items:
            $ref: '#/components/schemas/Display'
    CredentialSubjectParametersDTO:
      type: object
      properties:
        display:
          type: array
          items:
            $ref: '#/components/schemas/Display'
    Display:
      title: Display
      type: object
      properties:
        name:
          type: string
          description: The identifier or label of the claim field to be displayed.
        locale:
          type: string
          description: The language or regional setting for which the display name is intended.
    Logo:
      type: object
      properties:
        url:
          type: string
          description: The URL of the logo image.
        alt_text:
          type: string
          description: 'Alternative text for the logo, used for accessibility.'
    BackgroundImage:
      type: object
      properties:
        uri:
          type: string
          description: The URI of the background image.
    MetaDataDisplayDTO:
      type: object
      properties:
        logo:
          $ref: '#/components/schemas/Logo'
          description: Holds information regarding the logo image.
        name:
          type: string
          description: 'The display name, typically used as a title or label.'
        locale:
          type: string
          description: 'The language or region code for localization (e.g., en-US).'
        text_color:
          type: string
          description: 'The color code for text, used for UI customization.'
        background_color:
          type: string
          description: The color for background when credential is displayed.
        background_image:
          $ref: '#/components/schemas/BackgroundImage'
    ExceptionResponseWrapper:
      type: object
      x-examples:
        Example 1:
          responseTime: '2025-08-07T10:04:35.037Z'
          response: null
          errors:
            - errorCode: invalid_request
              errorMessage: 'Configuration not found with the provided id: MockVerifiableCredential_SD_JWT2'
      properties:
        responseTime:
          type: string
          description: 'The timestamp indicating when the response was generated, in ISO 8601 format.'
        response:
          description: 'The main response data. It is null in this case, indicating no successful data was returned.'
          nullable: true
        errors:
          type: array
          description: |
            An array containing error details if the request failed.
          items:
            type: object
            properties:
              errorCode:
                type: string
                description: A code representing the type of error encountered.
              errorMessage:
                type: string
                description: A human-readable message describing the error.